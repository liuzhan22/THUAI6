// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message2Clients.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Message2Clients_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Message2Clients_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021005 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>   // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "MessageType.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Message2Clients_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal
{
    class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Message2Clients_2eproto
{
    static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Message2Clients_2eproto;
namespace protobuf
{
    class BoolRes;
    struct BoolResDefaultTypeInternal;
    extern BoolResDefaultTypeInternal _BoolRes_default_instance_;
    class MessageOfAll;
    struct MessageOfAllDefaultTypeInternal;
    extern MessageOfAllDefaultTypeInternal _MessageOfAll_default_instance_;
    class MessageOfBombedBullet;
    struct MessageOfBombedBulletDefaultTypeInternal;
    extern MessageOfBombedBulletDefaultTypeInternal _MessageOfBombedBullet_default_instance_;
    class MessageOfBullet;
    struct MessageOfBulletDefaultTypeInternal;
    extern MessageOfBulletDefaultTypeInternal _MessageOfBullet_default_instance_;
    class MessageOfChest;
    struct MessageOfChestDefaultTypeInternal;
    extern MessageOfChestDefaultTypeInternal _MessageOfChest_default_instance_;
    class MessageOfClassroom;
    struct MessageOfClassroomDefaultTypeInternal;
    extern MessageOfClassroomDefaultTypeInternal _MessageOfClassroom_default_instance_;
    class MessageOfDoor;
    struct MessageOfDoorDefaultTypeInternal;
    extern MessageOfDoorDefaultTypeInternal _MessageOfDoor_default_instance_;
    class MessageOfGate;
    struct MessageOfGateDefaultTypeInternal;
    extern MessageOfGateDefaultTypeInternal _MessageOfGate_default_instance_;
    class MessageOfHiddenGate;
    struct MessageOfHiddenGateDefaultTypeInternal;
    extern MessageOfHiddenGateDefaultTypeInternal _MessageOfHiddenGate_default_instance_;
    class MessageOfMap;
    struct MessageOfMapDefaultTypeInternal;
    extern MessageOfMapDefaultTypeInternal _MessageOfMap_default_instance_;
    class MessageOfMap_Row;
    struct MessageOfMap_RowDefaultTypeInternal;
    extern MessageOfMap_RowDefaultTypeInternal _MessageOfMap_Row_default_instance_;
    class MessageOfNews;
    struct MessageOfNewsDefaultTypeInternal;
    extern MessageOfNewsDefaultTypeInternal _MessageOfNews_default_instance_;
    class MessageOfObj;
    struct MessageOfObjDefaultTypeInternal;
    extern MessageOfObjDefaultTypeInternal _MessageOfObj_default_instance_;
    class MessageOfPickedProp;
    struct MessageOfPickedPropDefaultTypeInternal;
    extern MessageOfPickedPropDefaultTypeInternal _MessageOfPickedProp_default_instance_;
    class MessageOfProp;
    struct MessageOfPropDefaultTypeInternal;
    extern MessageOfPropDefaultTypeInternal _MessageOfProp_default_instance_;
    class MessageOfStudent;
    struct MessageOfStudentDefaultTypeInternal;
    extern MessageOfStudentDefaultTypeInternal _MessageOfStudent_default_instance_;
    class MessageOfTricker;
    struct MessageOfTrickerDefaultTypeInternal;
    extern MessageOfTrickerDefaultTypeInternal _MessageOfTricker_default_instance_;
    class MessageToClient;
    struct MessageToClientDefaultTypeInternal;
    extern MessageToClientDefaultTypeInternal _MessageToClient_default_instance_;
    class MoveRes;
    struct MoveResDefaultTypeInternal;
    extern MoveResDefaultTypeInternal _MoveRes_default_instance_;
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<>
::protobuf::BoolRes* Arena::CreateMaybeMessage<::protobuf::BoolRes>(Arena*);
template<>
::protobuf::MessageOfAll* Arena::CreateMaybeMessage<::protobuf::MessageOfAll>(Arena*);
template<>
::protobuf::MessageOfBombedBullet* Arena::CreateMaybeMessage<::protobuf::MessageOfBombedBullet>(Arena*);
template<>
::protobuf::MessageOfBullet* Arena::CreateMaybeMessage<::protobuf::MessageOfBullet>(Arena*);
template<>
::protobuf::MessageOfChest* Arena::CreateMaybeMessage<::protobuf::MessageOfChest>(Arena*);
template<>
::protobuf::MessageOfClassroom* Arena::CreateMaybeMessage<::protobuf::MessageOfClassroom>(Arena*);
template<>
::protobuf::MessageOfDoor* Arena::CreateMaybeMessage<::protobuf::MessageOfDoor>(Arena*);
template<>
::protobuf::MessageOfGate* Arena::CreateMaybeMessage<::protobuf::MessageOfGate>(Arena*);
template<>
::protobuf::MessageOfHiddenGate* Arena::CreateMaybeMessage<::protobuf::MessageOfHiddenGate>(Arena*);
template<>
::protobuf::MessageOfMap* Arena::CreateMaybeMessage<::protobuf::MessageOfMap>(Arena*);
template<>
::protobuf::MessageOfMap_Row* Arena::CreateMaybeMessage<::protobuf::MessageOfMap_Row>(Arena*);
template<>
::protobuf::MessageOfNews* Arena::CreateMaybeMessage<::protobuf::MessageOfNews>(Arena*);
template<>
::protobuf::MessageOfObj* Arena::CreateMaybeMessage<::protobuf::MessageOfObj>(Arena*);
template<>
::protobuf::MessageOfPickedProp* Arena::CreateMaybeMessage<::protobuf::MessageOfPickedProp>(Arena*);
template<>
::protobuf::MessageOfProp* Arena::CreateMaybeMessage<::protobuf::MessageOfProp>(Arena*);
template<>
::protobuf::MessageOfStudent* Arena::CreateMaybeMessage<::protobuf::MessageOfStudent>(Arena*);
template<>
::protobuf::MessageOfTricker* Arena::CreateMaybeMessage<::protobuf::MessageOfTricker>(Arena*);
template<>
::protobuf::MessageToClient* Arena::CreateMaybeMessage<::protobuf::MessageToClient>(Arena*);
template<>
::protobuf::MoveRes* Arena::CreateMaybeMessage<::protobuf::MoveRes>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf
{

    // ===================================================================

    class MessageOfStudent final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfStudent) */
    {
    public:
        inline MessageOfStudent() :
            MessageOfStudent(nullptr)
        {
        }
        ~MessageOfStudent() override;
        explicit PROTOBUF_CONSTEXPR MessageOfStudent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfStudent(const MessageOfStudent& from);
        MessageOfStudent(MessageOfStudent&& from) noexcept
            :
            MessageOfStudent()
        {
            *this = ::std::move(from);
        }

        inline MessageOfStudent& operator=(const MessageOfStudent& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfStudent& operator=(MessageOfStudent&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfStudent& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfStudent* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfStudent*>(
                &_MessageOfStudent_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            0;

        friend void swap(MessageOfStudent& a, MessageOfStudent& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfStudent* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfStudent* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfStudent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfStudent>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfStudent& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfStudent& from)
        {
            MessageOfStudent::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfStudent* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfStudent";
        }

    protected:
        explicit MessageOfStudent(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kTimeUntilSkillAvailableFieldNumber = 6,
            kPropFieldNumber = 8,
            kBuffFieldNumber = 25,
            kXFieldNumber = 1,
            kYFieldNumber = 2,
            kSpeedFieldNumber = 3,
            kDeterminationFieldNumber = 4,
            kAddictionFieldNumber = 5,
            kPlaceFieldNumber = 7,
            kGuidFieldNumber = 10,
            kPlayerStateFieldNumber = 9,
            kBulletTypeFieldNumber = 12,
            kLearningSpeedFieldNumber = 13,
            kTreatSpeedFieldNumber = 14,
            kPlayerIdFieldNumber = 15,
            kViewRangeFieldNumber = 16,
            kRadiusFieldNumber = 17,
            kDangerAlertFieldNumber = 19,
            kScoreFieldNumber = 20,
            kTreatProgressFieldNumber = 21,
            kRescueProgressFieldNumber = 22,
            kStudentTypeFieldNumber = 23,
            kFacingDirectionFieldNumber = 24,
        };
        // repeated double time_until_skill_available = 6;
        int time_until_skill_available_size() const;

    private:
        int _internal_time_until_skill_available_size() const;

    public:
        void clear_time_until_skill_available();

    private:
        double _internal_time_until_skill_available(int index) const;
        const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>&
            _internal_time_until_skill_available() const;
        void _internal_add_time_until_skill_available(double value);
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>*
            _internal_mutable_time_until_skill_available();

    public:
        double time_until_skill_available(int index) const;
        void set_time_until_skill_available(int index, double value);
        void add_time_until_skill_available(double value);
        const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>&
            time_until_skill_available() const;
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>*
            mutable_time_until_skill_available();

        // repeated .protobuf.PropType prop = 8;
        int prop_size() const;

    private:
        int _internal_prop_size() const;

    public:
        void clear_prop();

    private:
        ::protobuf::PropType _internal_prop(int index) const;
        void _internal_add_prop(::protobuf::PropType value);
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_prop();

    public:
        ::protobuf::PropType prop(int index) const;
        void set_prop(int index, ::protobuf::PropType value);
        void add_prop(::protobuf::PropType value);
        const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& prop() const;
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_prop();

        // repeated .protobuf.StudentBuffType buff = 25;
        int buff_size() const;

    private:
        int _internal_buff_size() const;

    public:
        void clear_buff();

    private:
        ::protobuf::StudentBuffType _internal_buff(int index) const;
        void _internal_add_buff(::protobuf::StudentBuffType value);
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_buff();

    public:
        ::protobuf::StudentBuffType buff(int index) const;
        void set_buff(int index, ::protobuf::StudentBuffType value);
        void add_buff(::protobuf::StudentBuffType value);
        const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& buff() const;
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_buff();

        // int32 x = 1;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // int32 y = 2;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // int32 speed = 3;
        void clear_speed();
        int32_t speed() const;
        void set_speed(int32_t value);

    private:
        int32_t _internal_speed() const;
        void _internal_set_speed(int32_t value);

    public:
        // int32 determination = 4;
        void clear_determination();
        int32_t determination() const;
        void set_determination(int32_t value);

    private:
        int32_t _internal_determination() const;
        void _internal_set_determination(int32_t value);

    public:
        // int32 addiction = 5;
        void clear_addiction();
        int32_t addiction() const;
        void set_addiction(int32_t value);

    private:
        int32_t _internal_addiction() const;
        void _internal_set_addiction(int32_t value);

    public:
        // .protobuf.PlaceType place = 7;
        void clear_place();
        ::protobuf::PlaceType place() const;
        void set_place(::protobuf::PlaceType value);

    private:
        ::protobuf::PlaceType _internal_place() const;
        void _internal_set_place(::protobuf::PlaceType value);

    public:
        // int64 guid = 10;
        void clear_guid();
        int64_t guid() const;
        void set_guid(int64_t value);

    private:
        int64_t _internal_guid() const;
        void _internal_set_guid(int64_t value);

    public:
        // .protobuf.PlayerState player_state = 9;
        void clear_player_state();
        ::protobuf::PlayerState player_state() const;
        void set_player_state(::protobuf::PlayerState value);

    private:
        ::protobuf::PlayerState _internal_player_state() const;
        void _internal_set_player_state(::protobuf::PlayerState value);

    public:
        // .protobuf.BulletType bullet_type = 12;
        void clear_bullet_type();
        ::protobuf::BulletType bullet_type() const;
        void set_bullet_type(::protobuf::BulletType value);

    private:
        ::protobuf::BulletType _internal_bullet_type() const;
        void _internal_set_bullet_type(::protobuf::BulletType value);

    public:
        // int32 learning_speed = 13;
        void clear_learning_speed();
        int32_t learning_speed() const;
        void set_learning_speed(int32_t value);

    private:
        int32_t _internal_learning_speed() const;
        void _internal_set_learning_speed(int32_t value);

    public:
        // int32 treat_speed = 14;
        void clear_treat_speed();
        int32_t treat_speed() const;
        void set_treat_speed(int32_t value);

    private:
        int32_t _internal_treat_speed() const;
        void _internal_set_treat_speed(int32_t value);

    public:
        // int64 player_id = 15;
        void clear_player_id();
        int64_t player_id() const;
        void set_player_id(int64_t value);

    private:
        int64_t _internal_player_id() const;
        void _internal_set_player_id(int64_t value);

    public:
        // int32 view_range = 16;
        void clear_view_range();
        int32_t view_range() const;
        void set_view_range(int32_t value);

    private:
        int32_t _internal_view_range() const;
        void _internal_set_view_range(int32_t value);

    public:
        // int32 radius = 17;
        void clear_radius();
        int32_t radius() const;
        void set_radius(int32_t value);

    private:
        int32_t _internal_radius() const;
        void _internal_set_radius(int32_t value);

    public:
        // double danger_alert = 19;
        void clear_danger_alert();
        double danger_alert() const;
        void set_danger_alert(double value);

    private:
        double _internal_danger_alert() const;
        void _internal_set_danger_alert(double value);

    public:
        // int32 score = 20;
        void clear_score();
        int32_t score() const;
        void set_score(int32_t value);

    private:
        int32_t _internal_score() const;
        void _internal_set_score(int32_t value);

    public:
        // int32 treat_progress = 21;
        void clear_treat_progress();
        int32_t treat_progress() const;
        void set_treat_progress(int32_t value);

    private:
        int32_t _internal_treat_progress() const;
        void _internal_set_treat_progress(int32_t value);

    public:
        // int32 rescue_progress = 22;
        void clear_rescue_progress();
        int32_t rescue_progress() const;
        void set_rescue_progress(int32_t value);

    private:
        int32_t _internal_rescue_progress() const;
        void _internal_set_rescue_progress(int32_t value);

    public:
        // .protobuf.StudentType student_type = 23;
        void clear_student_type();
        ::protobuf::StudentType student_type() const;
        void set_student_type(::protobuf::StudentType value);

    private:
        ::protobuf::StudentType _internal_student_type() const;
        void _internal_set_student_type(::protobuf::StudentType value);

    public:
        // double facing_direction = 24;
        void clear_facing_direction();
        double facing_direction() const;
        void set_facing_direction(double value);

    private:
        double _internal_facing_direction() const;
        void _internal_set_facing_direction(double value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfStudent)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            ::PROTOBUF_NAMESPACE_ID::RepeatedField<double> time_until_skill_available_;
            ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> prop_;
            mutable std::atomic<int> _prop_cached_byte_size_;
            ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> buff_;
            mutable std::atomic<int> _buff_cached_byte_size_;
            int32_t x_;
            int32_t y_;
            int32_t speed_;
            int32_t determination_;
            int32_t addiction_;
            int place_;
            int64_t guid_;
            int player_state_;
            int bullet_type_;
            int32_t learning_speed_;
            int32_t treat_speed_;
            int64_t player_id_;
            int32_t view_range_;
            int32_t radius_;
            double danger_alert_;
            int32_t score_;
            int32_t treat_progress_;
            int32_t rescue_progress_;
            int student_type_;
            double facing_direction_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfTricker final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfTricker) */
    {
    public:
        inline MessageOfTricker() :
            MessageOfTricker(nullptr)
        {
        }
        ~MessageOfTricker() override;
        explicit PROTOBUF_CONSTEXPR MessageOfTricker(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfTricker(const MessageOfTricker& from);
        MessageOfTricker(MessageOfTricker&& from) noexcept
            :
            MessageOfTricker()
        {
            *this = ::std::move(from);
        }

        inline MessageOfTricker& operator=(const MessageOfTricker& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfTricker& operator=(MessageOfTricker&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfTricker& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfTricker* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfTricker*>(
                &_MessageOfTricker_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            1;

        friend void swap(MessageOfTricker& a, MessageOfTricker& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfTricker* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfTricker* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfTricker* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfTricker>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfTricker& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfTricker& from)
        {
            MessageOfTricker::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfTricker* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfTricker";
        }

    protected:
        explicit MessageOfTricker(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kTimeUntilSkillAvailableFieldNumber = 5,
            kPropFieldNumber = 7,
            kBuffFieldNumber = 19,
            kXFieldNumber = 1,
            kYFieldNumber = 2,
            kSpeedFieldNumber = 3,
            kPlaceFieldNumber = 6,
            kGuidFieldNumber = 9,
            kTrickerTypeFieldNumber = 8,
            kScoreFieldNumber = 10,
            kPlayerIdFieldNumber = 11,
            kViewRangeFieldNumber = 12,
            kRadiusFieldNumber = 13,
            kTrickDesireFieldNumber = 15,
            kClassVolumeFieldNumber = 16,
            kPlayerStateFieldNumber = 14,
            kBulletTypeFieldNumber = 18,
            kFacingDirectionFieldNumber = 17,
        };
        // repeated double time_until_skill_available = 5;
        int time_until_skill_available_size() const;

    private:
        int _internal_time_until_skill_available_size() const;

    public:
        void clear_time_until_skill_available();

    private:
        double _internal_time_until_skill_available(int index) const;
        const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>&
            _internal_time_until_skill_available() const;
        void _internal_add_time_until_skill_available(double value);
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>*
            _internal_mutable_time_until_skill_available();

    public:
        double time_until_skill_available(int index) const;
        void set_time_until_skill_available(int index, double value);
        void add_time_until_skill_available(double value);
        const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>&
            time_until_skill_available() const;
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>*
            mutable_time_until_skill_available();

        // repeated .protobuf.PropType prop = 7;
        int prop_size() const;

    private:
        int _internal_prop_size() const;

    public:
        void clear_prop();

    private:
        ::protobuf::PropType _internal_prop(int index) const;
        void _internal_add_prop(::protobuf::PropType value);
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_prop();

    public:
        ::protobuf::PropType prop(int index) const;
        void set_prop(int index, ::protobuf::PropType value);
        void add_prop(::protobuf::PropType value);
        const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& prop() const;
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_prop();

        // repeated .protobuf.TrickerBuffType buff = 19;
        int buff_size() const;

    private:
        int _internal_buff_size() const;

    public:
        void clear_buff();

    private:
        ::protobuf::TrickerBuffType _internal_buff(int index) const;
        void _internal_add_buff(::protobuf::TrickerBuffType value);
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_buff();

    public:
        ::protobuf::TrickerBuffType buff(int index) const;
        void set_buff(int index, ::protobuf::TrickerBuffType value);
        void add_buff(::protobuf::TrickerBuffType value);
        const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& buff() const;
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_buff();

        // int32 x = 1;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // int32 y = 2;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // int32 speed = 3;
        void clear_speed();
        int32_t speed() const;
        void set_speed(int32_t value);

    private:
        int32_t _internal_speed() const;
        void _internal_set_speed(int32_t value);

    public:
        // .protobuf.PlaceType place = 6;
        void clear_place();
        ::protobuf::PlaceType place() const;
        void set_place(::protobuf::PlaceType value);

    private:
        ::protobuf::PlaceType _internal_place() const;
        void _internal_set_place(::protobuf::PlaceType value);

    public:
        // int64 guid = 9;
        void clear_guid();
        int64_t guid() const;
        void set_guid(int64_t value);

    private:
        int64_t _internal_guid() const;
        void _internal_set_guid(int64_t value);

    public:
        // .protobuf.TrickerType tricker_type = 8;
        void clear_tricker_type();
        ::protobuf::TrickerType tricker_type() const;
        void set_tricker_type(::protobuf::TrickerType value);

    private:
        ::protobuf::TrickerType _internal_tricker_type() const;
        void _internal_set_tricker_type(::protobuf::TrickerType value);

    public:
        // int32 score = 10;
        void clear_score();
        int32_t score() const;
        void set_score(int32_t value);

    private:
        int32_t _internal_score() const;
        void _internal_set_score(int32_t value);

    public:
        // int64 player_id = 11;
        void clear_player_id();
        int64_t player_id() const;
        void set_player_id(int64_t value);

    private:
        int64_t _internal_player_id() const;
        void _internal_set_player_id(int64_t value);

    public:
        // int32 view_range = 12;
        void clear_view_range();
        int32_t view_range() const;
        void set_view_range(int32_t value);

    private:
        int32_t _internal_view_range() const;
        void _internal_set_view_range(int32_t value);

    public:
        // int32 radius = 13;
        void clear_radius();
        int32_t radius() const;
        void set_radius(int32_t value);

    private:
        int32_t _internal_radius() const;
        void _internal_set_radius(int32_t value);

    public:
        // double trick_desire = 15;
        void clear_trick_desire();
        double trick_desire() const;
        void set_trick_desire(double value);

    private:
        double _internal_trick_desire() const;
        void _internal_set_trick_desire(double value);

    public:
        // double class_volume = 16;
        void clear_class_volume();
        double class_volume() const;
        void set_class_volume(double value);

    private:
        double _internal_class_volume() const;
        void _internal_set_class_volume(double value);

    public:
        // .protobuf.PlayerState player_state = 14;
        void clear_player_state();
        ::protobuf::PlayerState player_state() const;
        void set_player_state(::protobuf::PlayerState value);

    private:
        ::protobuf::PlayerState _internal_player_state() const;
        void _internal_set_player_state(::protobuf::PlayerState value);

    public:
        // .protobuf.BulletType bullet_type = 18;
        void clear_bullet_type();
        ::protobuf::BulletType bullet_type() const;
        void set_bullet_type(::protobuf::BulletType value);

    private:
        ::protobuf::BulletType _internal_bullet_type() const;
        void _internal_set_bullet_type(::protobuf::BulletType value);

    public:
        // double facing_direction = 17;
        void clear_facing_direction();
        double facing_direction() const;
        void set_facing_direction(double value);

    private:
        double _internal_facing_direction() const;
        void _internal_set_facing_direction(double value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfTricker)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            ::PROTOBUF_NAMESPACE_ID::RepeatedField<double> time_until_skill_available_;
            ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> prop_;
            mutable std::atomic<int> _prop_cached_byte_size_;
            ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> buff_;
            mutable std::atomic<int> _buff_cached_byte_size_;
            int32_t x_;
            int32_t y_;
            int32_t speed_;
            int place_;
            int64_t guid_;
            int tricker_type_;
            int32_t score_;
            int64_t player_id_;
            int32_t view_range_;
            int32_t radius_;
            double trick_desire_;
            double class_volume_;
            int player_state_;
            int bullet_type_;
            double facing_direction_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfBullet final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfBullet) */
    {
    public:
        inline MessageOfBullet() :
            MessageOfBullet(nullptr)
        {
        }
        ~MessageOfBullet() override;
        explicit PROTOBUF_CONSTEXPR MessageOfBullet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfBullet(const MessageOfBullet& from);
        MessageOfBullet(MessageOfBullet&& from) noexcept
            :
            MessageOfBullet()
        {
            *this = ::std::move(from);
        }

        inline MessageOfBullet& operator=(const MessageOfBullet& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfBullet& operator=(MessageOfBullet&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfBullet& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfBullet* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfBullet*>(
                &_MessageOfBullet_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            2;

        friend void swap(MessageOfBullet& a, MessageOfBullet& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfBullet* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfBullet* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfBullet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfBullet>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfBullet& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfBullet& from)
        {
            MessageOfBullet::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfBullet* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfBullet";
        }

    protected:
        explicit MessageOfBullet(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kTypeFieldNumber = 1,
            kXFieldNumber = 2,
            kFacingDirectionFieldNumber = 4,
            kYFieldNumber = 3,
            kTeamFieldNumber = 6,
            kGuidFieldNumber = 5,
            kBombRangeFieldNumber = 8,
            kPlaceFieldNumber = 7,
            kSpeedFieldNumber = 9,
        };
        // .protobuf.BulletType type = 1;
        void clear_type();
        ::protobuf::BulletType type() const;
        void set_type(::protobuf::BulletType value);

    private:
        ::protobuf::BulletType _internal_type() const;
        void _internal_set_type(::protobuf::BulletType value);

    public:
        // int32 x = 2;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // double facing_direction = 4;
        void clear_facing_direction();
        double facing_direction() const;
        void set_facing_direction(double value);

    private:
        double _internal_facing_direction() const;
        void _internal_set_facing_direction(double value);

    public:
        // int32 y = 3;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // .protobuf.PlayerType team = 6;
        void clear_team();
        ::protobuf::PlayerType team() const;
        void set_team(::protobuf::PlayerType value);

    private:
        ::protobuf::PlayerType _internal_team() const;
        void _internal_set_team(::protobuf::PlayerType value);

    public:
        // int64 guid = 5;
        void clear_guid();
        int64_t guid() const;
        void set_guid(int64_t value);

    private:
        int64_t _internal_guid() const;
        void _internal_set_guid(int64_t value);

    public:
        // double bomb_range = 8;
        void clear_bomb_range();
        double bomb_range() const;
        void set_bomb_range(double value);

    private:
        double _internal_bomb_range() const;
        void _internal_set_bomb_range(double value);

    public:
        // .protobuf.PlaceType place = 7;
        void clear_place();
        ::protobuf::PlaceType place() const;
        void set_place(::protobuf::PlaceType value);

    private:
        ::protobuf::PlaceType _internal_place() const;
        void _internal_set_place(::protobuf::PlaceType value);

    public:
        // int32 speed = 9;
        void clear_speed();
        int32_t speed() const;
        void set_speed(int32_t value);

    private:
        int32_t _internal_speed() const;
        void _internal_set_speed(int32_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfBullet)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int type_;
            int32_t x_;
            double facing_direction_;
            int32_t y_;
            int team_;
            int64_t guid_;
            double bomb_range_;
            int place_;
            int32_t speed_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfBombedBullet final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfBombedBullet) */
    {
    public:
        inline MessageOfBombedBullet() :
            MessageOfBombedBullet(nullptr)
        {
        }
        ~MessageOfBombedBullet() override;
        explicit PROTOBUF_CONSTEXPR MessageOfBombedBullet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfBombedBullet(const MessageOfBombedBullet& from);
        MessageOfBombedBullet(MessageOfBombedBullet&& from) noexcept
            :
            MessageOfBombedBullet()
        {
            *this = ::std::move(from);
        }

        inline MessageOfBombedBullet& operator=(const MessageOfBombedBullet& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfBombedBullet& operator=(MessageOfBombedBullet&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfBombedBullet& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfBombedBullet* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfBombedBullet*>(
                &_MessageOfBombedBullet_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            3;

        friend void swap(MessageOfBombedBullet& a, MessageOfBombedBullet& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfBombedBullet* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfBombedBullet* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfBombedBullet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfBombedBullet>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfBombedBullet& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfBombedBullet& from)
        {
            MessageOfBombedBullet::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfBombedBullet* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfBombedBullet";
        }

    protected:
        explicit MessageOfBombedBullet(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kTypeFieldNumber = 1,
            kXFieldNumber = 2,
            kFacingDirectionFieldNumber = 4,
            kMappingIdFieldNumber = 5,
            kBombRangeFieldNumber = 6,
            kYFieldNumber = 3,
        };
        // .protobuf.BulletType type = 1;
        void clear_type();
        ::protobuf::BulletType type() const;
        void set_type(::protobuf::BulletType value);

    private:
        ::protobuf::BulletType _internal_type() const;
        void _internal_set_type(::protobuf::BulletType value);

    public:
        // int32 x = 2;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // double facing_direction = 4;
        void clear_facing_direction();
        double facing_direction() const;
        void set_facing_direction(double value);

    private:
        double _internal_facing_direction() const;
        void _internal_set_facing_direction(double value);

    public:
        // int64 mapping_id = 5;
        void clear_mapping_id();
        int64_t mapping_id() const;
        void set_mapping_id(int64_t value);

    private:
        int64_t _internal_mapping_id() const;
        void _internal_set_mapping_id(int64_t value);

    public:
        // double bomb_range = 6;
        void clear_bomb_range();
        double bomb_range() const;
        void set_bomb_range(double value);

    private:
        double _internal_bomb_range() const;
        void _internal_set_bomb_range(double value);

    public:
        // int32 y = 3;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfBombedBullet)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int type_;
            int32_t x_;
            double facing_direction_;
            int64_t mapping_id_;
            double bomb_range_;
            int32_t y_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfProp final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfProp) */
    {
    public:
        inline MessageOfProp() :
            MessageOfProp(nullptr)
        {
        }
        ~MessageOfProp() override;
        explicit PROTOBUF_CONSTEXPR MessageOfProp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfProp(const MessageOfProp& from);
        MessageOfProp(MessageOfProp&& from) noexcept
            :
            MessageOfProp()
        {
            *this = ::std::move(from);
        }

        inline MessageOfProp& operator=(const MessageOfProp& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfProp& operator=(MessageOfProp&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfProp& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfProp* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfProp*>(
                &_MessageOfProp_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            4;

        friend void swap(MessageOfProp& a, MessageOfProp& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfProp* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfProp* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfProp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfProp>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfProp& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfProp& from)
        {
            MessageOfProp::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfProp* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfProp";
        }

    protected:
        explicit MessageOfProp(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kTypeFieldNumber = 1,
            kXFieldNumber = 2,
            kFacingDirectionFieldNumber = 4,
            kYFieldNumber = 3,
            kPlaceFieldNumber = 6,
            kGuidFieldNumber = 5,
        };
        // .protobuf.PropType type = 1;
        void clear_type();
        ::protobuf::PropType type() const;
        void set_type(::protobuf::PropType value);

    private:
        ::protobuf::PropType _internal_type() const;
        void _internal_set_type(::protobuf::PropType value);

    public:
        // int32 x = 2;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // double facing_direction = 4;
        void clear_facing_direction();
        double facing_direction() const;
        void set_facing_direction(double value);

    private:
        double _internal_facing_direction() const;
        void _internal_set_facing_direction(double value);

    public:
        // int32 y = 3;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // .protobuf.PlaceType place = 6;
        void clear_place();
        ::protobuf::PlaceType place() const;
        void set_place(::protobuf::PlaceType value);

    private:
        ::protobuf::PlaceType _internal_place() const;
        void _internal_set_place(::protobuf::PlaceType value);

    public:
        // int64 guid = 5;
        void clear_guid();
        int64_t guid() const;
        void set_guid(int64_t value);

    private:
        int64_t _internal_guid() const;
        void _internal_set_guid(int64_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfProp)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int type_;
            int32_t x_;
            double facing_direction_;
            int32_t y_;
            int place_;
            int64_t guid_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfPickedProp final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfPickedProp) */
    {
    public:
        inline MessageOfPickedProp() :
            MessageOfPickedProp(nullptr)
        {
        }
        ~MessageOfPickedProp() override;
        explicit PROTOBUF_CONSTEXPR MessageOfPickedProp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfPickedProp(const MessageOfPickedProp& from);
        MessageOfPickedProp(MessageOfPickedProp&& from) noexcept
            :
            MessageOfPickedProp()
        {
            *this = ::std::move(from);
        }

        inline MessageOfPickedProp& operator=(const MessageOfPickedProp& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfPickedProp& operator=(MessageOfPickedProp&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfPickedProp& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfPickedProp* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfPickedProp*>(
                &_MessageOfPickedProp_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            5;

        friend void swap(MessageOfPickedProp& a, MessageOfPickedProp& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfPickedProp* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfPickedProp* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfPickedProp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfPickedProp>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfPickedProp& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfPickedProp& from)
        {
            MessageOfPickedProp::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfPickedProp* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfPickedProp";
        }

    protected:
        explicit MessageOfPickedProp(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kTypeFieldNumber = 1,
            kXFieldNumber = 2,
            kFacingDirectionFieldNumber = 4,
            kMappingIdFieldNumber = 5,
            kYFieldNumber = 3,
        };
        // .protobuf.PropType type = 1;
        void clear_type();
        ::protobuf::PropType type() const;
        void set_type(::protobuf::PropType value);

    private:
        ::protobuf::PropType _internal_type() const;
        void _internal_set_type(::protobuf::PropType value);

    public:
        // int32 x = 2;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // double facing_direction = 4;
        void clear_facing_direction();
        double facing_direction() const;
        void set_facing_direction(double value);

    private:
        double _internal_facing_direction() const;
        void _internal_set_facing_direction(double value);

    public:
        // int64 mapping_id = 5;
        void clear_mapping_id();
        int64_t mapping_id() const;
        void set_mapping_id(int64_t value);

    private:
        int64_t _internal_mapping_id() const;
        void _internal_set_mapping_id(int64_t value);

    public:
        // int32 y = 3;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfPickedProp)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int type_;
            int32_t x_;
            double facing_direction_;
            int64_t mapping_id_;
            int32_t y_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfClassroom final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfClassroom) */
    {
    public:
        inline MessageOfClassroom() :
            MessageOfClassroom(nullptr)
        {
        }
        ~MessageOfClassroom() override;
        explicit PROTOBUF_CONSTEXPR MessageOfClassroom(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfClassroom(const MessageOfClassroom& from);
        MessageOfClassroom(MessageOfClassroom&& from) noexcept
            :
            MessageOfClassroom()
        {
            *this = ::std::move(from);
        }

        inline MessageOfClassroom& operator=(const MessageOfClassroom& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfClassroom& operator=(MessageOfClassroom&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfClassroom& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfClassroom* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfClassroom*>(
                &_MessageOfClassroom_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            6;

        friend void swap(MessageOfClassroom& a, MessageOfClassroom& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfClassroom* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfClassroom* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfClassroom* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfClassroom>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfClassroom& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfClassroom& from)
        {
            MessageOfClassroom::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfClassroom* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfClassroom";
        }

    protected:
        explicit MessageOfClassroom(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kXFieldNumber = 1,
            kYFieldNumber = 2,
            kProgressFieldNumber = 3,
        };
        // int32 x = 1;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // int32 y = 2;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // int32 progress = 3;
        void clear_progress();
        int32_t progress() const;
        void set_progress(int32_t value);

    private:
        int32_t _internal_progress() const;
        void _internal_set_progress(int32_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfClassroom)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int32_t x_;
            int32_t y_;
            int32_t progress_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfGate final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfGate) */
    {
    public:
        inline MessageOfGate() :
            MessageOfGate(nullptr)
        {
        }
        ~MessageOfGate() override;
        explicit PROTOBUF_CONSTEXPR MessageOfGate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfGate(const MessageOfGate& from);
        MessageOfGate(MessageOfGate&& from) noexcept
            :
            MessageOfGate()
        {
            *this = ::std::move(from);
        }

        inline MessageOfGate& operator=(const MessageOfGate& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfGate& operator=(MessageOfGate&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfGate& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfGate* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfGate*>(
                &_MessageOfGate_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            7;

        friend void swap(MessageOfGate& a, MessageOfGate& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfGate* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfGate* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfGate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfGate>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfGate& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfGate& from)
        {
            MessageOfGate::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfGate* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfGate";
        }

    protected:
        explicit MessageOfGate(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kXFieldNumber = 1,
            kYFieldNumber = 2,
            kProgressFieldNumber = 3,
        };
        // int32 x = 1;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // int32 y = 2;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // int32 progress = 3;
        void clear_progress();
        int32_t progress() const;
        void set_progress(int32_t value);

    private:
        int32_t _internal_progress() const;
        void _internal_set_progress(int32_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfGate)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int32_t x_;
            int32_t y_;
            int32_t progress_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfHiddenGate final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfHiddenGate) */
    {
    public:
        inline MessageOfHiddenGate() :
            MessageOfHiddenGate(nullptr)
        {
        }
        ~MessageOfHiddenGate() override;
        explicit PROTOBUF_CONSTEXPR MessageOfHiddenGate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfHiddenGate(const MessageOfHiddenGate& from);
        MessageOfHiddenGate(MessageOfHiddenGate&& from) noexcept
            :
            MessageOfHiddenGate()
        {
            *this = ::std::move(from);
        }

        inline MessageOfHiddenGate& operator=(const MessageOfHiddenGate& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfHiddenGate& operator=(MessageOfHiddenGate&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfHiddenGate& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfHiddenGate* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfHiddenGate*>(
                &_MessageOfHiddenGate_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            8;

        friend void swap(MessageOfHiddenGate& a, MessageOfHiddenGate& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfHiddenGate* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfHiddenGate* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfHiddenGate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfHiddenGate>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfHiddenGate& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfHiddenGate& from)
        {
            MessageOfHiddenGate::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfHiddenGate* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfHiddenGate";
        }

    protected:
        explicit MessageOfHiddenGate(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kXFieldNumber = 1,
            kYFieldNumber = 2,
            kOpenedFieldNumber = 3,
        };
        // int32 x = 1;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // int32 y = 2;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // bool opened = 3;
        void clear_opened();
        bool opened() const;
        void set_opened(bool value);

    private:
        bool _internal_opened() const;
        void _internal_set_opened(bool value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfHiddenGate)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int32_t x_;
            int32_t y_;
            bool opened_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfDoor final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfDoor) */
    {
    public:
        inline MessageOfDoor() :
            MessageOfDoor(nullptr)
        {
        }
        ~MessageOfDoor() override;
        explicit PROTOBUF_CONSTEXPR MessageOfDoor(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfDoor(const MessageOfDoor& from);
        MessageOfDoor(MessageOfDoor&& from) noexcept
            :
            MessageOfDoor()
        {
            *this = ::std::move(from);
        }

        inline MessageOfDoor& operator=(const MessageOfDoor& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfDoor& operator=(MessageOfDoor&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfDoor& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfDoor* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfDoor*>(
                &_MessageOfDoor_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            9;

        friend void swap(MessageOfDoor& a, MessageOfDoor& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfDoor* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfDoor* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfDoor* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfDoor>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfDoor& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfDoor& from)
        {
            MessageOfDoor::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfDoor* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfDoor";
        }

    protected:
        explicit MessageOfDoor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kXFieldNumber = 1,
            kYFieldNumber = 2,
            kIsOpenFieldNumber = 3,
            kProgressFieldNumber = 4,
        };
        // int32 x = 1;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // int32 y = 2;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // bool is_open = 3;
        void clear_is_open();
        bool is_open() const;
        void set_is_open(bool value);

    private:
        bool _internal_is_open() const;
        void _internal_set_is_open(bool value);

    public:
        // int32 progress = 4;
        void clear_progress();
        int32_t progress() const;
        void set_progress(int32_t value);

    private:
        int32_t _internal_progress() const;
        void _internal_set_progress(int32_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfDoor)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int32_t x_;
            int32_t y_;
            bool is_open_;
            int32_t progress_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfChest final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfChest) */
    {
    public:
        inline MessageOfChest() :
            MessageOfChest(nullptr)
        {
        }
        ~MessageOfChest() override;
        explicit PROTOBUF_CONSTEXPR MessageOfChest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfChest(const MessageOfChest& from);
        MessageOfChest(MessageOfChest&& from) noexcept
            :
            MessageOfChest()
        {
            *this = ::std::move(from);
        }

        inline MessageOfChest& operator=(const MessageOfChest& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfChest& operator=(MessageOfChest&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfChest& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfChest* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfChest*>(
                &_MessageOfChest_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            10;

        friend void swap(MessageOfChest& a, MessageOfChest& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfChest* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfChest* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfChest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfChest>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfChest& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfChest& from)
        {
            MessageOfChest::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfChest* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfChest";
        }

    protected:
        explicit MessageOfChest(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kXFieldNumber = 1,
            kYFieldNumber = 2,
            kProgressFieldNumber = 3,
        };
        // int32 x = 1;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // int32 y = 2;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // int32 progress = 3;
        void clear_progress();
        int32_t progress() const;
        void set_progress(int32_t value);

    private:
        int32_t _internal_progress() const;
        void _internal_set_progress(int32_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfChest)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int32_t x_;
            int32_t y_;
            int32_t progress_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfMap_Row final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfMap.Row) */
    {
    public:
        inline MessageOfMap_Row() :
            MessageOfMap_Row(nullptr)
        {
        }
        ~MessageOfMap_Row() override;
        explicit PROTOBUF_CONSTEXPR MessageOfMap_Row(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfMap_Row(const MessageOfMap_Row& from);
        MessageOfMap_Row(MessageOfMap_Row&& from) noexcept
            :
            MessageOfMap_Row()
        {
            *this = ::std::move(from);
        }

        inline MessageOfMap_Row& operator=(const MessageOfMap_Row& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfMap_Row& operator=(MessageOfMap_Row&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfMap_Row& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfMap_Row* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfMap_Row*>(
                &_MessageOfMap_Row_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            11;

        friend void swap(MessageOfMap_Row& a, MessageOfMap_Row& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfMap_Row* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfMap_Row* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfMap_Row* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfMap_Row>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfMap_Row& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfMap_Row& from)
        {
            MessageOfMap_Row::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfMap_Row* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfMap.Row";
        }

    protected:
        explicit MessageOfMap_Row(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kColFieldNumber = 1,
        };
        // repeated .protobuf.PlaceType col = 1;
        int col_size() const;

    private:
        int _internal_col_size() const;

    public:
        void clear_col();

    private:
        ::protobuf::PlaceType _internal_col(int index) const;
        void _internal_add_col(::protobuf::PlaceType value);
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_col();

    public:
        ::protobuf::PlaceType col(int index) const;
        void set_col(int index, ::protobuf::PlaceType value);
        void add_col(::protobuf::PlaceType value);
        const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& col() const;
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_col();

        // @@protoc_insertion_point(class_scope:protobuf.MessageOfMap.Row)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> col_;
            mutable std::atomic<int> _col_cached_byte_size_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfMap final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfMap) */
    {
    public:
        inline MessageOfMap() :
            MessageOfMap(nullptr)
        {
        }
        ~MessageOfMap() override;
        explicit PROTOBUF_CONSTEXPR MessageOfMap(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfMap(const MessageOfMap& from);
        MessageOfMap(MessageOfMap&& from) noexcept
            :
            MessageOfMap()
        {
            *this = ::std::move(from);
        }

        inline MessageOfMap& operator=(const MessageOfMap& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfMap& operator=(MessageOfMap&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfMap& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfMap* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfMap*>(
                &_MessageOfMap_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            12;

        friend void swap(MessageOfMap& a, MessageOfMap& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfMap* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfMap* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfMap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfMap>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfMap& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfMap& from)
        {
            MessageOfMap::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfMap* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfMap";
        }

    protected:
        explicit MessageOfMap(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        typedef MessageOfMap_Row Row;

        // accessors -------------------------------------------------------

        enum : int
        {
            kRowFieldNumber = 2,
        };
        // repeated .protobuf.MessageOfMap.Row row = 2;
        int row_size() const;

    private:
        int _internal_row_size() const;

    public:
        void clear_row();
        ::protobuf::MessageOfMap_Row* mutable_row(int index);
        ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfMap_Row>*
            mutable_row();

    private:
        const ::protobuf::MessageOfMap_Row& _internal_row(int index) const;
        ::protobuf::MessageOfMap_Row* _internal_add_row();

    public:
        const ::protobuf::MessageOfMap_Row& row(int index) const;
        ::protobuf::MessageOfMap_Row* add_row();
        const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfMap_Row>&
            row() const;

        // @@protoc_insertion_point(class_scope:protobuf.MessageOfMap)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfMap_Row> row_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfNews final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfNews) */
    {
    public:
        inline MessageOfNews() :
            MessageOfNews(nullptr)
        {
        }
        ~MessageOfNews() override;
        explicit PROTOBUF_CONSTEXPR MessageOfNews(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfNews(const MessageOfNews& from);
        MessageOfNews(MessageOfNews&& from) noexcept
            :
            MessageOfNews()
        {
            *this = ::std::move(from);
        }

        inline MessageOfNews& operator=(const MessageOfNews& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfNews& operator=(MessageOfNews&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfNews& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfNews* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfNews*>(
                &_MessageOfNews_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            13;

        friend void swap(MessageOfNews& a, MessageOfNews& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfNews* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfNews* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfNews* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfNews>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfNews& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfNews& from)
        {
            MessageOfNews::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfNews* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfNews";
        }

    protected:
        explicit MessageOfNews(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kNewsFieldNumber = 1,
            kFromIdFieldNumber = 2,
            kToIdFieldNumber = 3,
        };
        // string news = 1;
        void clear_news();
        const std::string& news() const;
        template<typename ArgT0 = const std::string&, typename... ArgT>
        void set_news(ArgT0&& arg0, ArgT... args);
        std::string* mutable_news();
        PROTOBUF_NODISCARD std::string* release_news();
        void set_allocated_news(std::string* news);

    private:
        const std::string& _internal_news() const;
        inline PROTOBUF_ALWAYS_INLINE void _internal_set_news(const std::string& value);
        std::string* _internal_mutable_news();

    public:
        // int64 from_id = 2;
        void clear_from_id();
        int64_t from_id() const;
        void set_from_id(int64_t value);

    private:
        int64_t _internal_from_id() const;
        void _internal_set_from_id(int64_t value);

    public:
        // int64 to_id = 3;
        void clear_to_id();
        int64_t to_id() const;
        void set_to_id(int64_t value);

    private:
        int64_t _internal_to_id() const;
        void _internal_set_to_id(int64_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfNews)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr news_;
            int64_t from_id_;
            int64_t to_id_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfObj final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfObj) */
    {
    public:
        inline MessageOfObj() :
            MessageOfObj(nullptr)
        {
        }
        ~MessageOfObj() override;
        explicit PROTOBUF_CONSTEXPR MessageOfObj(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfObj(const MessageOfObj& from);
        MessageOfObj(MessageOfObj&& from) noexcept
            :
            MessageOfObj()
        {
            *this = ::std::move(from);
        }

        inline MessageOfObj& operator=(const MessageOfObj& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfObj& operator=(MessageOfObj&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfObj& default_instance()
        {
            return *internal_default_instance();
        }
        enum MessageOfObjCase
        {
            kStudentMessage = 1,
            kTrickerMessage = 2,
            kPropMessage = 3,
            kBulletMessage = 4,
            kBombedBulletMessage = 5,
            kClassroomMessage = 6,
            kDoorMessage = 7,
            kGateMessage = 8,
            kChestMessage = 9,
            kHiddenGateMessage = 10,
            kNewsMessage = 11,
            kMapMessage = 12,
            MESSAGE_OF_OBJ_NOT_SET = 0,
        };

        static inline const MessageOfObj* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfObj*>(
                &_MessageOfObj_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            14;

        friend void swap(MessageOfObj& a, MessageOfObj& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfObj* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfObj* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfObj* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfObj>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfObj& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfObj& from)
        {
            MessageOfObj::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfObj* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfObj";
        }

    protected:
        explicit MessageOfObj(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kStudentMessageFieldNumber = 1,
            kTrickerMessageFieldNumber = 2,
            kPropMessageFieldNumber = 3,
            kBulletMessageFieldNumber = 4,
            kBombedBulletMessageFieldNumber = 5,
            kClassroomMessageFieldNumber = 6,
            kDoorMessageFieldNumber = 7,
            kGateMessageFieldNumber = 8,
            kChestMessageFieldNumber = 9,
            kHiddenGateMessageFieldNumber = 10,
            kNewsMessageFieldNumber = 11,
            kMapMessageFieldNumber = 12,
        };
        // .protobuf.MessageOfStudent student_message = 1;
        bool has_student_message() const;

    private:
        bool _internal_has_student_message() const;

    public:
        void clear_student_message();
        const ::protobuf::MessageOfStudent& student_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfStudent* release_student_message();
        ::protobuf::MessageOfStudent* mutable_student_message();
        void set_allocated_student_message(::protobuf::MessageOfStudent* student_message);

    private:
        const ::protobuf::MessageOfStudent& _internal_student_message() const;
        ::protobuf::MessageOfStudent* _internal_mutable_student_message();

    public:
        void unsafe_arena_set_allocated_student_message(
            ::protobuf::MessageOfStudent* student_message
        );
        ::protobuf::MessageOfStudent* unsafe_arena_release_student_message();

        // .protobuf.MessageOfTricker tricker_message = 2;
        bool has_tricker_message() const;

    private:
        bool _internal_has_tricker_message() const;

    public:
        void clear_tricker_message();
        const ::protobuf::MessageOfTricker& tricker_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfTricker* release_tricker_message();
        ::protobuf::MessageOfTricker* mutable_tricker_message();
        void set_allocated_tricker_message(::protobuf::MessageOfTricker* tricker_message);

    private:
        const ::protobuf::MessageOfTricker& _internal_tricker_message() const;
        ::protobuf::MessageOfTricker* _internal_mutable_tricker_message();

    public:
        void unsafe_arena_set_allocated_tricker_message(
            ::protobuf::MessageOfTricker* tricker_message
        );
        ::protobuf::MessageOfTricker* unsafe_arena_release_tricker_message();

        // .protobuf.MessageOfProp prop_message = 3;
        bool has_prop_message() const;

    private:
        bool _internal_has_prop_message() const;

    public:
        void clear_prop_message();
        const ::protobuf::MessageOfProp& prop_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfProp* release_prop_message();
        ::protobuf::MessageOfProp* mutable_prop_message();
        void set_allocated_prop_message(::protobuf::MessageOfProp* prop_message);

    private:
        const ::protobuf::MessageOfProp& _internal_prop_message() const;
        ::protobuf::MessageOfProp* _internal_mutable_prop_message();

    public:
        void unsafe_arena_set_allocated_prop_message(
            ::protobuf::MessageOfProp* prop_message
        );
        ::protobuf::MessageOfProp* unsafe_arena_release_prop_message();

        // .protobuf.MessageOfBullet bullet_message = 4;
        bool has_bullet_message() const;

    private:
        bool _internal_has_bullet_message() const;

    public:
        void clear_bullet_message();
        const ::protobuf::MessageOfBullet& bullet_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfBullet* release_bullet_message();
        ::protobuf::MessageOfBullet* mutable_bullet_message();
        void set_allocated_bullet_message(::protobuf::MessageOfBullet* bullet_message);

    private:
        const ::protobuf::MessageOfBullet& _internal_bullet_message() const;
        ::protobuf::MessageOfBullet* _internal_mutable_bullet_message();

    public:
        void unsafe_arena_set_allocated_bullet_message(
            ::protobuf::MessageOfBullet* bullet_message
        );
        ::protobuf::MessageOfBullet* unsafe_arena_release_bullet_message();

        // .protobuf.MessageOfBombedBullet bombed_bullet_message = 5;
        bool has_bombed_bullet_message() const;

    private:
        bool _internal_has_bombed_bullet_message() const;

    public:
        void clear_bombed_bullet_message();
        const ::protobuf::MessageOfBombedBullet& bombed_bullet_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfBombedBullet* release_bombed_bullet_message();
        ::protobuf::MessageOfBombedBullet* mutable_bombed_bullet_message();
        void set_allocated_bombed_bullet_message(::protobuf::MessageOfBombedBullet* bombed_bullet_message);

    private:
        const ::protobuf::MessageOfBombedBullet& _internal_bombed_bullet_message() const;
        ::protobuf::MessageOfBombedBullet* _internal_mutable_bombed_bullet_message();

    public:
        void unsafe_arena_set_allocated_bombed_bullet_message(
            ::protobuf::MessageOfBombedBullet* bombed_bullet_message
        );
        ::protobuf::MessageOfBombedBullet* unsafe_arena_release_bombed_bullet_message();

        // .protobuf.MessageOfClassroom classroom_message = 6;
        bool has_classroom_message() const;

    private:
        bool _internal_has_classroom_message() const;

    public:
        void clear_classroom_message();
        const ::protobuf::MessageOfClassroom& classroom_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfClassroom* release_classroom_message();
        ::protobuf::MessageOfClassroom* mutable_classroom_message();
        void set_allocated_classroom_message(::protobuf::MessageOfClassroom* classroom_message);

    private:
        const ::protobuf::MessageOfClassroom& _internal_classroom_message() const;
        ::protobuf::MessageOfClassroom* _internal_mutable_classroom_message();

    public:
        void unsafe_arena_set_allocated_classroom_message(
            ::protobuf::MessageOfClassroom* classroom_message
        );
        ::protobuf::MessageOfClassroom* unsafe_arena_release_classroom_message();

        // .protobuf.MessageOfDoor door_message = 7;
        bool has_door_message() const;

    private:
        bool _internal_has_door_message() const;

    public:
        void clear_door_message();
        const ::protobuf::MessageOfDoor& door_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfDoor* release_door_message();
        ::protobuf::MessageOfDoor* mutable_door_message();
        void set_allocated_door_message(::protobuf::MessageOfDoor* door_message);

    private:
        const ::protobuf::MessageOfDoor& _internal_door_message() const;
        ::protobuf::MessageOfDoor* _internal_mutable_door_message();

    public:
        void unsafe_arena_set_allocated_door_message(
            ::protobuf::MessageOfDoor* door_message
        );
        ::protobuf::MessageOfDoor* unsafe_arena_release_door_message();

        // .protobuf.MessageOfGate gate_message = 8;
        bool has_gate_message() const;

    private:
        bool _internal_has_gate_message() const;

    public:
        void clear_gate_message();
        const ::protobuf::MessageOfGate& gate_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfGate* release_gate_message();
        ::protobuf::MessageOfGate* mutable_gate_message();
        void set_allocated_gate_message(::protobuf::MessageOfGate* gate_message);

    private:
        const ::protobuf::MessageOfGate& _internal_gate_message() const;
        ::protobuf::MessageOfGate* _internal_mutable_gate_message();

    public:
        void unsafe_arena_set_allocated_gate_message(
            ::protobuf::MessageOfGate* gate_message
        );
        ::protobuf::MessageOfGate* unsafe_arena_release_gate_message();

        // .protobuf.MessageOfChest chest_message = 9;
        bool has_chest_message() const;

    private:
        bool _internal_has_chest_message() const;

    public:
        void clear_chest_message();
        const ::protobuf::MessageOfChest& chest_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfChest* release_chest_message();
        ::protobuf::MessageOfChest* mutable_chest_message();
        void set_allocated_chest_message(::protobuf::MessageOfChest* chest_message);

    private:
        const ::protobuf::MessageOfChest& _internal_chest_message() const;
        ::protobuf::MessageOfChest* _internal_mutable_chest_message();

    public:
        void unsafe_arena_set_allocated_chest_message(
            ::protobuf::MessageOfChest* chest_message
        );
        ::protobuf::MessageOfChest* unsafe_arena_release_chest_message();

        // .protobuf.MessageOfHiddenGate hidden_gate_message = 10;
        bool has_hidden_gate_message() const;

    private:
        bool _internal_has_hidden_gate_message() const;

    public:
        void clear_hidden_gate_message();
        const ::protobuf::MessageOfHiddenGate& hidden_gate_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfHiddenGate* release_hidden_gate_message();
        ::protobuf::MessageOfHiddenGate* mutable_hidden_gate_message();
        void set_allocated_hidden_gate_message(::protobuf::MessageOfHiddenGate* hidden_gate_message);

    private:
        const ::protobuf::MessageOfHiddenGate& _internal_hidden_gate_message() const;
        ::protobuf::MessageOfHiddenGate* _internal_mutable_hidden_gate_message();

    public:
        void unsafe_arena_set_allocated_hidden_gate_message(
            ::protobuf::MessageOfHiddenGate* hidden_gate_message
        );
        ::protobuf::MessageOfHiddenGate* unsafe_arena_release_hidden_gate_message();

        // .protobuf.MessageOfNews news_message = 11;
        bool has_news_message() const;

    private:
        bool _internal_has_news_message() const;

    public:
        void clear_news_message();
        const ::protobuf::MessageOfNews& news_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfNews* release_news_message();
        ::protobuf::MessageOfNews* mutable_news_message();
        void set_allocated_news_message(::protobuf::MessageOfNews* news_message);

    private:
        const ::protobuf::MessageOfNews& _internal_news_message() const;
        ::protobuf::MessageOfNews* _internal_mutable_news_message();

    public:
        void unsafe_arena_set_allocated_news_message(
            ::protobuf::MessageOfNews* news_message
        );
        ::protobuf::MessageOfNews* unsafe_arena_release_news_message();

        // .protobuf.MessageOfMap map_message = 12;
        bool has_map_message() const;

    private:
        bool _internal_has_map_message() const;

    public:
        void clear_map_message();
        const ::protobuf::MessageOfMap& map_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfMap* release_map_message();
        ::protobuf::MessageOfMap* mutable_map_message();
        void set_allocated_map_message(::protobuf::MessageOfMap* map_message);

    private:
        const ::protobuf::MessageOfMap& _internal_map_message() const;
        ::protobuf::MessageOfMap* _internal_mutable_map_message();

    public:
        void unsafe_arena_set_allocated_map_message(
            ::protobuf::MessageOfMap* map_message
        );
        ::protobuf::MessageOfMap* unsafe_arena_release_map_message();

        void clear_message_of_obj();
        MessageOfObjCase message_of_obj_case() const;
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfObj)

    private:
        class _Internal;
        void set_has_student_message();
        void set_has_tricker_message();
        void set_has_prop_message();
        void set_has_bullet_message();
        void set_has_bombed_bullet_message();
        void set_has_classroom_message();
        void set_has_door_message();
        void set_has_gate_message();
        void set_has_chest_message();
        void set_has_hidden_gate_message();
        void set_has_news_message();
        void set_has_map_message();

        inline bool has_message_of_obj() const;
        inline void clear_has_message_of_obj();

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            union MessageOfObjUnion
            {
                constexpr MessageOfObjUnion() :
                    _constinit_{}
                {
                }
                ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
                ::protobuf::MessageOfStudent* student_message_;
                ::protobuf::MessageOfTricker* tricker_message_;
                ::protobuf::MessageOfProp* prop_message_;
                ::protobuf::MessageOfBullet* bullet_message_;
                ::protobuf::MessageOfBombedBullet* bombed_bullet_message_;
                ::protobuf::MessageOfClassroom* classroom_message_;
                ::protobuf::MessageOfDoor* door_message_;
                ::protobuf::MessageOfGate* gate_message_;
                ::protobuf::MessageOfChest* chest_message_;
                ::protobuf::MessageOfHiddenGate* hidden_gate_message_;
                ::protobuf::MessageOfNews* news_message_;
                ::protobuf::MessageOfMap* map_message_;
            } message_of_obj_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
            uint32_t _oneof_case_[1];
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfAll final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfAll) */
    {
    public:
        inline MessageOfAll() :
            MessageOfAll(nullptr)
        {
        }
        ~MessageOfAll() override;
        explicit PROTOBUF_CONSTEXPR MessageOfAll(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfAll(const MessageOfAll& from);
        MessageOfAll(MessageOfAll&& from) noexcept
            :
            MessageOfAll()
        {
            *this = ::std::move(from);
        }

        inline MessageOfAll& operator=(const MessageOfAll& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfAll& operator=(MessageOfAll&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfAll& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfAll* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfAll*>(
                &_MessageOfAll_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            15;

        friend void swap(MessageOfAll& a, MessageOfAll& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfAll* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfAll* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfAll* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfAll>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfAll& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfAll& from)
        {
            MessageOfAll::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfAll* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfAll";
        }

    protected:
        explicit MessageOfAll(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kGameTimeFieldNumber = 1,
            kSubjectFinishedFieldNumber = 2,
            kStudentGraduatedFieldNumber = 3,
            kStudentQuitedFieldNumber = 4,
            kStudentScoreFieldNumber = 5,
            kTrickerScoreFieldNumber = 6,
        };
        // int32 game_time = 1;
        void clear_game_time();
        int32_t game_time() const;
        void set_game_time(int32_t value);

    private:
        int32_t _internal_game_time() const;
        void _internal_set_game_time(int32_t value);

    public:
        // int32 subject_finished = 2;
        void clear_subject_finished();
        int32_t subject_finished() const;
        void set_subject_finished(int32_t value);

    private:
        int32_t _internal_subject_finished() const;
        void _internal_set_subject_finished(int32_t value);

    public:
        // int32 student_graduated = 3;
        void clear_student_graduated();
        int32_t student_graduated() const;
        void set_student_graduated(int32_t value);

    private:
        int32_t _internal_student_graduated() const;
        void _internal_set_student_graduated(int32_t value);

    public:
        // int32 student_quited = 4;
        void clear_student_quited();
        int32_t student_quited() const;
        void set_student_quited(int32_t value);

    private:
        int32_t _internal_student_quited() const;
        void _internal_set_student_quited(int32_t value);

    public:
        // int32 student_score = 5;
        void clear_student_score();
        int32_t student_score() const;
        void set_student_score(int32_t value);

    private:
        int32_t _internal_student_score() const;
        void _internal_set_student_score(int32_t value);

    public:
        // int32 tricker_score = 6;
        void clear_tricker_score();
        int32_t tricker_score() const;
        void set_tricker_score(int32_t value);

    private:
        int32_t _internal_tricker_score() const;
        void _internal_set_tricker_score(int32_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfAll)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int32_t game_time_;
            int32_t subject_finished_;
            int32_t student_graduated_;
            int32_t student_quited_;
            int32_t student_score_;
            int32_t tricker_score_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageToClient final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageToClient) */
    {
    public:
        inline MessageToClient() :
            MessageToClient(nullptr)
        {
        }
        ~MessageToClient() override;
        explicit PROTOBUF_CONSTEXPR MessageToClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageToClient(const MessageToClient& from);
        MessageToClient(MessageToClient&& from) noexcept
            :
            MessageToClient()
        {
            *this = ::std::move(from);
        }

        inline MessageToClient& operator=(const MessageToClient& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageToClient& operator=(MessageToClient&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageToClient& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageToClient* internal_default_instance()
        {
            return reinterpret_cast<const MessageToClient*>(
                &_MessageToClient_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            16;

        friend void swap(MessageToClient& a, MessageToClient& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageToClient* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageToClient* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageToClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageToClient>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageToClient& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageToClient& from)
        {
            MessageToClient::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageToClient* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageToClient";
        }

    protected:
        explicit MessageToClient(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kObjMessageFieldNumber = 1,
            kAllMessageFieldNumber = 3,
            kGameStateFieldNumber = 2,
        };
        // repeated .protobuf.MessageOfObj obj_message = 1;
        int obj_message_size() const;

    private:
        int _internal_obj_message_size() const;

    public:
        void clear_obj_message();
        ::protobuf::MessageOfObj* mutable_obj_message(int index);
        ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfObj>*
            mutable_obj_message();

    private:
        const ::protobuf::MessageOfObj& _internal_obj_message(int index) const;
        ::protobuf::MessageOfObj* _internal_add_obj_message();

    public:
        const ::protobuf::MessageOfObj& obj_message(int index) const;
        ::protobuf::MessageOfObj* add_obj_message();
        const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfObj>&
            obj_message() const;

        // .protobuf.MessageOfAll all_message = 3;
        bool has_all_message() const;

    private:
        bool _internal_has_all_message() const;

    public:
        void clear_all_message();
        const ::protobuf::MessageOfAll& all_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfAll* release_all_message();
        ::protobuf::MessageOfAll* mutable_all_message();
        void set_allocated_all_message(::protobuf::MessageOfAll* all_message);

    private:
        const ::protobuf::MessageOfAll& _internal_all_message() const;
        ::protobuf::MessageOfAll* _internal_mutable_all_message();

    public:
        void unsafe_arena_set_allocated_all_message(
            ::protobuf::MessageOfAll* all_message
        );
        ::protobuf::MessageOfAll* unsafe_arena_release_all_message();

        // .protobuf.GameState game_state = 2;
        void clear_game_state();
        ::protobuf::GameState game_state() const;
        void set_game_state(::protobuf::GameState value);

    private:
        ::protobuf::GameState _internal_game_state() const;
        void _internal_set_game_state(::protobuf::GameState value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageToClient)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfObj> obj_message_;
            ::protobuf::MessageOfAll* all_message_;
            int game_state_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MoveRes final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MoveRes) */
    {
    public:
        inline MoveRes() :
            MoveRes(nullptr)
        {
        }
        ~MoveRes() override;
        explicit PROTOBUF_CONSTEXPR MoveRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MoveRes(const MoveRes& from);
        MoveRes(MoveRes&& from) noexcept
            :
            MoveRes()
        {
            *this = ::std::move(from);
        }

        inline MoveRes& operator=(const MoveRes& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MoveRes& operator=(MoveRes&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MoveRes& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MoveRes* internal_default_instance()
        {
            return reinterpret_cast<const MoveRes*>(
                &_MoveRes_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            17;

        friend void swap(MoveRes& a, MoveRes& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MoveRes* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MoveRes* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MoveRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MoveRes>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MoveRes& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MoveRes& from)
        {
            MoveRes::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MoveRes* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MoveRes";
        }

    protected:
        explicit MoveRes(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kActualSpeedFieldNumber = 1,
            kActualAngleFieldNumber = 2,
            kActSuccessFieldNumber = 3,
        };
        // int64 actual_speed = 1;
        void clear_actual_speed();
        int64_t actual_speed() const;
        void set_actual_speed(int64_t value);

    private:
        int64_t _internal_actual_speed() const;
        void _internal_set_actual_speed(int64_t value);

    public:
        // double actual_angle = 2;
        void clear_actual_angle();
        double actual_angle() const;
        void set_actual_angle(double value);

    private:
        double _internal_actual_angle() const;
        void _internal_set_actual_angle(double value);

    public:
        // bool act_success = 3;
        void clear_act_success();
        bool act_success() const;
        void set_act_success(bool value);

    private:
        bool _internal_act_success() const;
        void _internal_set_act_success(bool value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MoveRes)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int64_t actual_speed_;
            double actual_angle_;
            bool act_success_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class BoolRes final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.BoolRes) */
    {
    public:
        inline BoolRes() :
            BoolRes(nullptr)
        {
        }
        ~BoolRes() override;
        explicit PROTOBUF_CONSTEXPR BoolRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        BoolRes(const BoolRes& from);
        BoolRes(BoolRes&& from) noexcept
            :
            BoolRes()
        {
            *this = ::std::move(from);
        }

        inline BoolRes& operator=(const BoolRes& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline BoolRes& operator=(BoolRes&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const BoolRes& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const BoolRes* internal_default_instance()
        {
            return reinterpret_cast<const BoolRes*>(
                &_BoolRes_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            18;

        friend void swap(BoolRes& a, BoolRes& b)
        {
            a.Swap(&b);
        }
        inline void Swap(BoolRes* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(BoolRes* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        BoolRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<BoolRes>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const BoolRes& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const BoolRes& from)
        {
            BoolRes::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(BoolRes* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.BoolRes";
        }

    protected:
        explicit BoolRes(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kActSuccessFieldNumber = 1,
        };
        // bool act_success = 1;
        void clear_act_success();
        bool act_success() const;
        void set_act_success(bool value);

    private:
        bool _internal_act_success() const;
        void _internal_set_act_success(bool value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.BoolRes)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            bool act_success_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // ===================================================================

    // ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
    // MessageOfStudent

    // int32 x = 1;
    inline void MessageOfStudent::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfStudent::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.x)
        return _internal_x();
    }
    inline void MessageOfStudent::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfStudent::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.x)
    }

    // int32 y = 2;
    inline void MessageOfStudent::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfStudent::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.y)
        return _internal_y();
    }
    inline void MessageOfStudent::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfStudent::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.y)
    }

    // int32 speed = 3;
    inline void MessageOfStudent::clear_speed()
    {
        _impl_.speed_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_speed() const
    {
        return _impl_.speed_;
    }
    inline int32_t MessageOfStudent::speed() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.speed)
        return _internal_speed();
    }
    inline void MessageOfStudent::_internal_set_speed(int32_t value)
    {
        _impl_.speed_ = value;
    }
    inline void MessageOfStudent::set_speed(int32_t value)
    {
        _internal_set_speed(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.speed)
    }

    // int32 determination = 4;
    inline void MessageOfStudent::clear_determination()
    {
        _impl_.determination_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_determination() const
    {
        return _impl_.determination_;
    }
    inline int32_t MessageOfStudent::determination() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.determination)
        return _internal_determination();
    }
    inline void MessageOfStudent::_internal_set_determination(int32_t value)
    {
        _impl_.determination_ = value;
    }
    inline void MessageOfStudent::set_determination(int32_t value)
    {
        _internal_set_determination(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.determination)
    }

    // int32 addiction = 5;
    inline void MessageOfStudent::clear_addiction()
    {
        _impl_.addiction_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_addiction() const
    {
        return _impl_.addiction_;
    }
    inline int32_t MessageOfStudent::addiction() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.addiction)
        return _internal_addiction();
    }
    inline void MessageOfStudent::_internal_set_addiction(int32_t value)
    {
        _impl_.addiction_ = value;
    }
    inline void MessageOfStudent::set_addiction(int32_t value)
    {
        _internal_set_addiction(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.addiction)
    }

    // repeated double time_until_skill_available = 6;
    inline int MessageOfStudent::_internal_time_until_skill_available_size() const
    {
        return _impl_.time_until_skill_available_.size();
    }
    inline int MessageOfStudent::time_until_skill_available_size() const
    {
        return _internal_time_until_skill_available_size();
    }
    inline void MessageOfStudent::clear_time_until_skill_available()
    {
        _impl_.time_until_skill_available_.Clear();
    }
    inline double MessageOfStudent::_internal_time_until_skill_available(int index) const
    {
        return _impl_.time_until_skill_available_.Get(index);
    }
    inline double MessageOfStudent::time_until_skill_available(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.time_until_skill_available)
        return _internal_time_until_skill_available(index);
    }
    inline void MessageOfStudent::set_time_until_skill_available(int index, double value)
    {
        _impl_.time_until_skill_available_.Set(index, value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.time_until_skill_available)
    }
    inline void MessageOfStudent::_internal_add_time_until_skill_available(double value)
    {
        _impl_.time_until_skill_available_.Add(value);
    }
    inline void MessageOfStudent::add_time_until_skill_available(double value)
    {
        _internal_add_time_until_skill_available(value);
        // @@protoc_insertion_point(field_add:protobuf.MessageOfStudent.time_until_skill_available)
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>&
        MessageOfStudent::_internal_time_until_skill_available() const
    {
        return _impl_.time_until_skill_available_;
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>&
        MessageOfStudent::time_until_skill_available() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageOfStudent.time_until_skill_available)
        return _internal_time_until_skill_available();
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>*
        MessageOfStudent::_internal_mutable_time_until_skill_available()
    {
        return &_impl_.time_until_skill_available_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>*
        MessageOfStudent::mutable_time_until_skill_available()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfStudent.time_until_skill_available)
        return _internal_mutable_time_until_skill_available();
    }

    // .protobuf.PlaceType place = 7;
    inline void MessageOfStudent::clear_place()
    {
        _impl_.place_ = 0;
    }
    inline ::protobuf::PlaceType MessageOfStudent::_internal_place() const
    {
        return static_cast<::protobuf::PlaceType>(_impl_.place_);
    }
    inline ::protobuf::PlaceType MessageOfStudent::place() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.place)
        return _internal_place();
    }
    inline void MessageOfStudent::_internal_set_place(::protobuf::PlaceType value)
    {
        _impl_.place_ = value;
    }
    inline void MessageOfStudent::set_place(::protobuf::PlaceType value)
    {
        _internal_set_place(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.place)
    }

    // repeated .protobuf.PropType prop = 8;
    inline int MessageOfStudent::_internal_prop_size() const
    {
        return _impl_.prop_.size();
    }
    inline int MessageOfStudent::prop_size() const
    {
        return _internal_prop_size();
    }
    inline void MessageOfStudent::clear_prop()
    {
        _impl_.prop_.Clear();
    }
    inline ::protobuf::PropType MessageOfStudent::_internal_prop(int index) const
    {
        return static_cast<::protobuf::PropType>(_impl_.prop_.Get(index));
    }
    inline ::protobuf::PropType MessageOfStudent::prop(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.prop)
        return _internal_prop(index);
    }
    inline void MessageOfStudent::set_prop(int index, ::protobuf::PropType value)
    {
        _impl_.prop_.Set(index, value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.prop)
    }
    inline void MessageOfStudent::_internal_add_prop(::protobuf::PropType value)
    {
        _impl_.prop_.Add(value);
    }
    inline void MessageOfStudent::add_prop(::protobuf::PropType value)
    {
        _internal_add_prop(value);
        // @@protoc_insertion_point(field_add:protobuf.MessageOfStudent.prop)
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
        MessageOfStudent::prop() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageOfStudent.prop)
        return _impl_.prop_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfStudent::_internal_mutable_prop()
    {
        return &_impl_.prop_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfStudent::mutable_prop()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfStudent.prop)
        return _internal_mutable_prop();
    }

    // .protobuf.PlayerState player_state = 9;
    inline void MessageOfStudent::clear_player_state()
    {
        _impl_.player_state_ = 0;
    }
    inline ::protobuf::PlayerState MessageOfStudent::_internal_player_state() const
    {
        return static_cast<::protobuf::PlayerState>(_impl_.player_state_);
    }
    inline ::protobuf::PlayerState MessageOfStudent::player_state() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.player_state)
        return _internal_player_state();
    }
    inline void MessageOfStudent::_internal_set_player_state(::protobuf::PlayerState value)
    {
        _impl_.player_state_ = value;
    }
    inline void MessageOfStudent::set_player_state(::protobuf::PlayerState value)
    {
        _internal_set_player_state(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.player_state)
    }

    // int64 guid = 10;
    inline void MessageOfStudent::clear_guid()
    {
        _impl_.guid_ = int64_t{0};
    }
    inline int64_t MessageOfStudent::_internal_guid() const
    {
        return _impl_.guid_;
    }
    inline int64_t MessageOfStudent::guid() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.guid)
        return _internal_guid();
    }
    inline void MessageOfStudent::_internal_set_guid(int64_t value)
    {
        _impl_.guid_ = value;
    }
    inline void MessageOfStudent::set_guid(int64_t value)
    {
        _internal_set_guid(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.guid)
    }

    // .protobuf.BulletType bullet_type = 12;
    inline void MessageOfStudent::clear_bullet_type()
    {
        _impl_.bullet_type_ = 0;
    }
    inline ::protobuf::BulletType MessageOfStudent::_internal_bullet_type() const
    {
        return static_cast<::protobuf::BulletType>(_impl_.bullet_type_);
    }
    inline ::protobuf::BulletType MessageOfStudent::bullet_type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.bullet_type)
        return _internal_bullet_type();
    }
    inline void MessageOfStudent::_internal_set_bullet_type(::protobuf::BulletType value)
    {
        _impl_.bullet_type_ = value;
    }
    inline void MessageOfStudent::set_bullet_type(::protobuf::BulletType value)
    {
        _internal_set_bullet_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.bullet_type)
    }

    // int32 learning_speed = 13;
    inline void MessageOfStudent::clear_learning_speed()
    {
        _impl_.learning_speed_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_learning_speed() const
    {
        return _impl_.learning_speed_;
    }
    inline int32_t MessageOfStudent::learning_speed() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.learning_speed)
        return _internal_learning_speed();
    }
    inline void MessageOfStudent::_internal_set_learning_speed(int32_t value)
    {
        _impl_.learning_speed_ = value;
    }
    inline void MessageOfStudent::set_learning_speed(int32_t value)
    {
        _internal_set_learning_speed(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.learning_speed)
    }

    // int32 treat_speed = 14;
    inline void MessageOfStudent::clear_treat_speed()
    {
        _impl_.treat_speed_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_treat_speed() const
    {
        return _impl_.treat_speed_;
    }
    inline int32_t MessageOfStudent::treat_speed() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.treat_speed)
        return _internal_treat_speed();
    }
    inline void MessageOfStudent::_internal_set_treat_speed(int32_t value)
    {
        _impl_.treat_speed_ = value;
    }
    inline void MessageOfStudent::set_treat_speed(int32_t value)
    {
        _internal_set_treat_speed(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.treat_speed)
    }

    // int64 player_id = 15;
    inline void MessageOfStudent::clear_player_id()
    {
        _impl_.player_id_ = int64_t{0};
    }
    inline int64_t MessageOfStudent::_internal_player_id() const
    {
        return _impl_.player_id_;
    }
    inline int64_t MessageOfStudent::player_id() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.player_id)
        return _internal_player_id();
    }
    inline void MessageOfStudent::_internal_set_player_id(int64_t value)
    {
        _impl_.player_id_ = value;
    }
    inline void MessageOfStudent::set_player_id(int64_t value)
    {
        _internal_set_player_id(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.player_id)
    }

    // int32 view_range = 16;
    inline void MessageOfStudent::clear_view_range()
    {
        _impl_.view_range_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_view_range() const
    {
        return _impl_.view_range_;
    }
    inline int32_t MessageOfStudent::view_range() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.view_range)
        return _internal_view_range();
    }
    inline void MessageOfStudent::_internal_set_view_range(int32_t value)
    {
        _impl_.view_range_ = value;
    }
    inline void MessageOfStudent::set_view_range(int32_t value)
    {
        _internal_set_view_range(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.view_range)
    }

    // int32 radius = 17;
    inline void MessageOfStudent::clear_radius()
    {
        _impl_.radius_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_radius() const
    {
        return _impl_.radius_;
    }
    inline int32_t MessageOfStudent::radius() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.radius)
        return _internal_radius();
    }
    inline void MessageOfStudent::_internal_set_radius(int32_t value)
    {
        _impl_.radius_ = value;
    }
    inline void MessageOfStudent::set_radius(int32_t value)
    {
        _internal_set_radius(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.radius)
    }

    // double danger_alert = 19;
    inline void MessageOfStudent::clear_danger_alert()
    {
        _impl_.danger_alert_ = 0;
    }
    inline double MessageOfStudent::_internal_danger_alert() const
    {
        return _impl_.danger_alert_;
    }
    inline double MessageOfStudent::danger_alert() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.danger_alert)
        return _internal_danger_alert();
    }
    inline void MessageOfStudent::_internal_set_danger_alert(double value)
    {
        _impl_.danger_alert_ = value;
    }
    inline void MessageOfStudent::set_danger_alert(double value)
    {
        _internal_set_danger_alert(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.danger_alert)
    }

    // int32 score = 20;
    inline void MessageOfStudent::clear_score()
    {
        _impl_.score_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_score() const
    {
        return _impl_.score_;
    }
    inline int32_t MessageOfStudent::score() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.score)
        return _internal_score();
    }
    inline void MessageOfStudent::_internal_set_score(int32_t value)
    {
        _impl_.score_ = value;
    }
    inline void MessageOfStudent::set_score(int32_t value)
    {
        _internal_set_score(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.score)
    }

    // int32 treat_progress = 21;
    inline void MessageOfStudent::clear_treat_progress()
    {
        _impl_.treat_progress_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_treat_progress() const
    {
        return _impl_.treat_progress_;
    }
    inline int32_t MessageOfStudent::treat_progress() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.treat_progress)
        return _internal_treat_progress();
    }
    inline void MessageOfStudent::_internal_set_treat_progress(int32_t value)
    {
        _impl_.treat_progress_ = value;
    }
    inline void MessageOfStudent::set_treat_progress(int32_t value)
    {
        _internal_set_treat_progress(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.treat_progress)
    }

    // int32 rescue_progress = 22;
    inline void MessageOfStudent::clear_rescue_progress()
    {
        _impl_.rescue_progress_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_rescue_progress() const
    {
        return _impl_.rescue_progress_;
    }
    inline int32_t MessageOfStudent::rescue_progress() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.rescue_progress)
        return _internal_rescue_progress();
    }
    inline void MessageOfStudent::_internal_set_rescue_progress(int32_t value)
    {
        _impl_.rescue_progress_ = value;
    }
    inline void MessageOfStudent::set_rescue_progress(int32_t value)
    {
        _internal_set_rescue_progress(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.rescue_progress)
    }

    // .protobuf.StudentType student_type = 23;
    inline void MessageOfStudent::clear_student_type()
    {
        _impl_.student_type_ = 0;
    }
    inline ::protobuf::StudentType MessageOfStudent::_internal_student_type() const
    {
        return static_cast<::protobuf::StudentType>(_impl_.student_type_);
    }
    inline ::protobuf::StudentType MessageOfStudent::student_type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.student_type)
        return _internal_student_type();
    }
    inline void MessageOfStudent::_internal_set_student_type(::protobuf::StudentType value)
    {
        _impl_.student_type_ = value;
    }
    inline void MessageOfStudent::set_student_type(::protobuf::StudentType value)
    {
        _internal_set_student_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.student_type)
    }

    // double facing_direction = 24;
    inline void MessageOfStudent::clear_facing_direction()
    {
        _impl_.facing_direction_ = 0;
    }
    inline double MessageOfStudent::_internal_facing_direction() const
    {
        return _impl_.facing_direction_;
    }
    inline double MessageOfStudent::facing_direction() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.facing_direction)
        return _internal_facing_direction();
    }
    inline void MessageOfStudent::_internal_set_facing_direction(double value)
    {
        _impl_.facing_direction_ = value;
    }
    inline void MessageOfStudent::set_facing_direction(double value)
    {
        _internal_set_facing_direction(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.facing_direction)
    }

    // repeated .protobuf.StudentBuffType buff = 25;
    inline int MessageOfStudent::_internal_buff_size() const
    {
        return _impl_.buff_.size();
    }
    inline int MessageOfStudent::buff_size() const
    {
        return _internal_buff_size();
    }
    inline void MessageOfStudent::clear_buff()
    {
        _impl_.buff_.Clear();
    }
    inline ::protobuf::StudentBuffType MessageOfStudent::_internal_buff(int index) const
    {
        return static_cast<::protobuf::StudentBuffType>(_impl_.buff_.Get(index));
    }
    inline ::protobuf::StudentBuffType MessageOfStudent::buff(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.buff)
        return _internal_buff(index);
    }
    inline void MessageOfStudent::set_buff(int index, ::protobuf::StudentBuffType value)
    {
        _impl_.buff_.Set(index, value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.buff)
    }
    inline void MessageOfStudent::_internal_add_buff(::protobuf::StudentBuffType value)
    {
        _impl_.buff_.Add(value);
    }
    inline void MessageOfStudent::add_buff(::protobuf::StudentBuffType value)
    {
        _internal_add_buff(value);
        // @@protoc_insertion_point(field_add:protobuf.MessageOfStudent.buff)
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
        MessageOfStudent::buff() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageOfStudent.buff)
        return _impl_.buff_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfStudent::_internal_mutable_buff()
    {
        return &_impl_.buff_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfStudent::mutable_buff()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfStudent.buff)
        return _internal_mutable_buff();
    }

    // -------------------------------------------------------------------

    // MessageOfTricker

    // int32 x = 1;
    inline void MessageOfTricker::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfTricker::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfTricker::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.x)
        return _internal_x();
    }
    inline void MessageOfTricker::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfTricker::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.x)
    }

    // int32 y = 2;
    inline void MessageOfTricker::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfTricker::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfTricker::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.y)
        return _internal_y();
    }
    inline void MessageOfTricker::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfTricker::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.y)
    }

    // int32 speed = 3;
    inline void MessageOfTricker::clear_speed()
    {
        _impl_.speed_ = 0;
    }
    inline int32_t MessageOfTricker::_internal_speed() const
    {
        return _impl_.speed_;
    }
    inline int32_t MessageOfTricker::speed() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.speed)
        return _internal_speed();
    }
    inline void MessageOfTricker::_internal_set_speed(int32_t value)
    {
        _impl_.speed_ = value;
    }
    inline void MessageOfTricker::set_speed(int32_t value)
    {
        _internal_set_speed(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.speed)
    }

    // repeated double time_until_skill_available = 5;
    inline int MessageOfTricker::_internal_time_until_skill_available_size() const
    {
        return _impl_.time_until_skill_available_.size();
    }
    inline int MessageOfTricker::time_until_skill_available_size() const
    {
        return _internal_time_until_skill_available_size();
    }
    inline void MessageOfTricker::clear_time_until_skill_available()
    {
        _impl_.time_until_skill_available_.Clear();
    }
    inline double MessageOfTricker::_internal_time_until_skill_available(int index) const
    {
        return _impl_.time_until_skill_available_.Get(index);
    }
    inline double MessageOfTricker::time_until_skill_available(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.time_until_skill_available)
        return _internal_time_until_skill_available(index);
    }
    inline void MessageOfTricker::set_time_until_skill_available(int index, double value)
    {
        _impl_.time_until_skill_available_.Set(index, value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.time_until_skill_available)
    }
    inline void MessageOfTricker::_internal_add_time_until_skill_available(double value)
    {
        _impl_.time_until_skill_available_.Add(value);
    }
    inline void MessageOfTricker::add_time_until_skill_available(double value)
    {
        _internal_add_time_until_skill_available(value);
        // @@protoc_insertion_point(field_add:protobuf.MessageOfTricker.time_until_skill_available)
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>&
        MessageOfTricker::_internal_time_until_skill_available() const
    {
        return _impl_.time_until_skill_available_;
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>&
        MessageOfTricker::time_until_skill_available() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageOfTricker.time_until_skill_available)
        return _internal_time_until_skill_available();
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>*
        MessageOfTricker::_internal_mutable_time_until_skill_available()
    {
        return &_impl_.time_until_skill_available_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<double>*
        MessageOfTricker::mutable_time_until_skill_available()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfTricker.time_until_skill_available)
        return _internal_mutable_time_until_skill_available();
    }

    // .protobuf.PlaceType place = 6;
    inline void MessageOfTricker::clear_place()
    {
        _impl_.place_ = 0;
    }
    inline ::protobuf::PlaceType MessageOfTricker::_internal_place() const
    {
        return static_cast<::protobuf::PlaceType>(_impl_.place_);
    }
    inline ::protobuf::PlaceType MessageOfTricker::place() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.place)
        return _internal_place();
    }
    inline void MessageOfTricker::_internal_set_place(::protobuf::PlaceType value)
    {
        _impl_.place_ = value;
    }
    inline void MessageOfTricker::set_place(::protobuf::PlaceType value)
    {
        _internal_set_place(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.place)
    }

    // repeated .protobuf.PropType prop = 7;
    inline int MessageOfTricker::_internal_prop_size() const
    {
        return _impl_.prop_.size();
    }
    inline int MessageOfTricker::prop_size() const
    {
        return _internal_prop_size();
    }
    inline void MessageOfTricker::clear_prop()
    {
        _impl_.prop_.Clear();
    }
    inline ::protobuf::PropType MessageOfTricker::_internal_prop(int index) const
    {
        return static_cast<::protobuf::PropType>(_impl_.prop_.Get(index));
    }
    inline ::protobuf::PropType MessageOfTricker::prop(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.prop)
        return _internal_prop(index);
    }
    inline void MessageOfTricker::set_prop(int index, ::protobuf::PropType value)
    {
        _impl_.prop_.Set(index, value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.prop)
    }
    inline void MessageOfTricker::_internal_add_prop(::protobuf::PropType value)
    {
        _impl_.prop_.Add(value);
    }
    inline void MessageOfTricker::add_prop(::protobuf::PropType value)
    {
        _internal_add_prop(value);
        // @@protoc_insertion_point(field_add:protobuf.MessageOfTricker.prop)
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
        MessageOfTricker::prop() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageOfTricker.prop)
        return _impl_.prop_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfTricker::_internal_mutable_prop()
    {
        return &_impl_.prop_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfTricker::mutable_prop()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfTricker.prop)
        return _internal_mutable_prop();
    }

    // .protobuf.TrickerType tricker_type = 8;
    inline void MessageOfTricker::clear_tricker_type()
    {
        _impl_.tricker_type_ = 0;
    }
    inline ::protobuf::TrickerType MessageOfTricker::_internal_tricker_type() const
    {
        return static_cast<::protobuf::TrickerType>(_impl_.tricker_type_);
    }
    inline ::protobuf::TrickerType MessageOfTricker::tricker_type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.tricker_type)
        return _internal_tricker_type();
    }
    inline void MessageOfTricker::_internal_set_tricker_type(::protobuf::TrickerType value)
    {
        _impl_.tricker_type_ = value;
    }
    inline void MessageOfTricker::set_tricker_type(::protobuf::TrickerType value)
    {
        _internal_set_tricker_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.tricker_type)
    }

    // int64 guid = 9;
    inline void MessageOfTricker::clear_guid()
    {
        _impl_.guid_ = int64_t{0};
    }
    inline int64_t MessageOfTricker::_internal_guid() const
    {
        return _impl_.guid_;
    }
    inline int64_t MessageOfTricker::guid() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.guid)
        return _internal_guid();
    }
    inline void MessageOfTricker::_internal_set_guid(int64_t value)
    {
        _impl_.guid_ = value;
    }
    inline void MessageOfTricker::set_guid(int64_t value)
    {
        _internal_set_guid(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.guid)
    }

    // int32 score = 10;
    inline void MessageOfTricker::clear_score()
    {
        _impl_.score_ = 0;
    }
    inline int32_t MessageOfTricker::_internal_score() const
    {
        return _impl_.score_;
    }
    inline int32_t MessageOfTricker::score() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.score)
        return _internal_score();
    }
    inline void MessageOfTricker::_internal_set_score(int32_t value)
    {
        _impl_.score_ = value;
    }
    inline void MessageOfTricker::set_score(int32_t value)
    {
        _internal_set_score(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.score)
    }

    // int64 player_id = 11;
    inline void MessageOfTricker::clear_player_id()
    {
        _impl_.player_id_ = int64_t{0};
    }
    inline int64_t MessageOfTricker::_internal_player_id() const
    {
        return _impl_.player_id_;
    }
    inline int64_t MessageOfTricker::player_id() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.player_id)
        return _internal_player_id();
    }
    inline void MessageOfTricker::_internal_set_player_id(int64_t value)
    {
        _impl_.player_id_ = value;
    }
    inline void MessageOfTricker::set_player_id(int64_t value)
    {
        _internal_set_player_id(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.player_id)
    }

    // int32 view_range = 12;
    inline void MessageOfTricker::clear_view_range()
    {
        _impl_.view_range_ = 0;
    }
    inline int32_t MessageOfTricker::_internal_view_range() const
    {
        return _impl_.view_range_;
    }
    inline int32_t MessageOfTricker::view_range() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.view_range)
        return _internal_view_range();
    }
    inline void MessageOfTricker::_internal_set_view_range(int32_t value)
    {
        _impl_.view_range_ = value;
    }
    inline void MessageOfTricker::set_view_range(int32_t value)
    {
        _internal_set_view_range(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.view_range)
    }

    // int32 radius = 13;
    inline void MessageOfTricker::clear_radius()
    {
        _impl_.radius_ = 0;
    }
    inline int32_t MessageOfTricker::_internal_radius() const
    {
        return _impl_.radius_;
    }
    inline int32_t MessageOfTricker::radius() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.radius)
        return _internal_radius();
    }
    inline void MessageOfTricker::_internal_set_radius(int32_t value)
    {
        _impl_.radius_ = value;
    }
    inline void MessageOfTricker::set_radius(int32_t value)
    {
        _internal_set_radius(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.radius)
    }

    // .protobuf.PlayerState player_state = 14;
    inline void MessageOfTricker::clear_player_state()
    {
        _impl_.player_state_ = 0;
    }
    inline ::protobuf::PlayerState MessageOfTricker::_internal_player_state() const
    {
        return static_cast<::protobuf::PlayerState>(_impl_.player_state_);
    }
    inline ::protobuf::PlayerState MessageOfTricker::player_state() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.player_state)
        return _internal_player_state();
    }
    inline void MessageOfTricker::_internal_set_player_state(::protobuf::PlayerState value)
    {
        _impl_.player_state_ = value;
    }
    inline void MessageOfTricker::set_player_state(::protobuf::PlayerState value)
    {
        _internal_set_player_state(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.player_state)
    }

    // double trick_desire = 15;
    inline void MessageOfTricker::clear_trick_desire()
    {
        _impl_.trick_desire_ = 0;
    }
    inline double MessageOfTricker::_internal_trick_desire() const
    {
        return _impl_.trick_desire_;
    }
    inline double MessageOfTricker::trick_desire() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.trick_desire)
        return _internal_trick_desire();
    }
    inline void MessageOfTricker::_internal_set_trick_desire(double value)
    {
        _impl_.trick_desire_ = value;
    }
    inline void MessageOfTricker::set_trick_desire(double value)
    {
        _internal_set_trick_desire(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.trick_desire)
    }

    // double class_volume = 16;
    inline void MessageOfTricker::clear_class_volume()
    {
        _impl_.class_volume_ = 0;
    }
    inline double MessageOfTricker::_internal_class_volume() const
    {
        return _impl_.class_volume_;
    }
    inline double MessageOfTricker::class_volume() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.class_volume)
        return _internal_class_volume();
    }
    inline void MessageOfTricker::_internal_set_class_volume(double value)
    {
        _impl_.class_volume_ = value;
    }
    inline void MessageOfTricker::set_class_volume(double value)
    {
        _internal_set_class_volume(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.class_volume)
    }

    // double facing_direction = 17;
    inline void MessageOfTricker::clear_facing_direction()
    {
        _impl_.facing_direction_ = 0;
    }
    inline double MessageOfTricker::_internal_facing_direction() const
    {
        return _impl_.facing_direction_;
    }
    inline double MessageOfTricker::facing_direction() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.facing_direction)
        return _internal_facing_direction();
    }
    inline void MessageOfTricker::_internal_set_facing_direction(double value)
    {
        _impl_.facing_direction_ = value;
    }
    inline void MessageOfTricker::set_facing_direction(double value)
    {
        _internal_set_facing_direction(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.facing_direction)
    }

    // .protobuf.BulletType bullet_type = 18;
    inline void MessageOfTricker::clear_bullet_type()
    {
        _impl_.bullet_type_ = 0;
    }
    inline ::protobuf::BulletType MessageOfTricker::_internal_bullet_type() const
    {
        return static_cast<::protobuf::BulletType>(_impl_.bullet_type_);
    }
    inline ::protobuf::BulletType MessageOfTricker::bullet_type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.bullet_type)
        return _internal_bullet_type();
    }
    inline void MessageOfTricker::_internal_set_bullet_type(::protobuf::BulletType value)
    {
        _impl_.bullet_type_ = value;
    }
    inline void MessageOfTricker::set_bullet_type(::protobuf::BulletType value)
    {
        _internal_set_bullet_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.bullet_type)
    }

    // repeated .protobuf.TrickerBuffType buff = 19;
    inline int MessageOfTricker::_internal_buff_size() const
    {
        return _impl_.buff_.size();
    }
    inline int MessageOfTricker::buff_size() const
    {
        return _internal_buff_size();
    }
    inline void MessageOfTricker::clear_buff()
    {
        _impl_.buff_.Clear();
    }
    inline ::protobuf::TrickerBuffType MessageOfTricker::_internal_buff(int index) const
    {
        return static_cast<::protobuf::TrickerBuffType>(_impl_.buff_.Get(index));
    }
    inline ::protobuf::TrickerBuffType MessageOfTricker::buff(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.buff)
        return _internal_buff(index);
    }
    inline void MessageOfTricker::set_buff(int index, ::protobuf::TrickerBuffType value)
    {
        _impl_.buff_.Set(index, value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.buff)
    }
    inline void MessageOfTricker::_internal_add_buff(::protobuf::TrickerBuffType value)
    {
        _impl_.buff_.Add(value);
    }
    inline void MessageOfTricker::add_buff(::protobuf::TrickerBuffType value)
    {
        _internal_add_buff(value);
        // @@protoc_insertion_point(field_add:protobuf.MessageOfTricker.buff)
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
        MessageOfTricker::buff() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageOfTricker.buff)
        return _impl_.buff_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfTricker::_internal_mutable_buff()
    {
        return &_impl_.buff_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfTricker::mutable_buff()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfTricker.buff)
        return _internal_mutable_buff();
    }

    // -------------------------------------------------------------------

    // MessageOfBullet

    // .protobuf.BulletType type = 1;
    inline void MessageOfBullet::clear_type()
    {
        _impl_.type_ = 0;
    }
    inline ::protobuf::BulletType MessageOfBullet::_internal_type() const
    {
        return static_cast<::protobuf::BulletType>(_impl_.type_);
    }
    inline ::protobuf::BulletType MessageOfBullet::type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.type)
        return _internal_type();
    }
    inline void MessageOfBullet::_internal_set_type(::protobuf::BulletType value)
    {
        _impl_.type_ = value;
    }
    inline void MessageOfBullet::set_type(::protobuf::BulletType value)
    {
        _internal_set_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.type)
    }

    // int32 x = 2;
    inline void MessageOfBullet::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfBullet::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfBullet::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.x)
        return _internal_x();
    }
    inline void MessageOfBullet::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfBullet::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.x)
    }

    // int32 y = 3;
    inline void MessageOfBullet::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfBullet::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfBullet::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.y)
        return _internal_y();
    }
    inline void MessageOfBullet::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfBullet::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.y)
    }

    // double facing_direction = 4;
    inline void MessageOfBullet::clear_facing_direction()
    {
        _impl_.facing_direction_ = 0;
    }
    inline double MessageOfBullet::_internal_facing_direction() const
    {
        return _impl_.facing_direction_;
    }
    inline double MessageOfBullet::facing_direction() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.facing_direction)
        return _internal_facing_direction();
    }
    inline void MessageOfBullet::_internal_set_facing_direction(double value)
    {
        _impl_.facing_direction_ = value;
    }
    inline void MessageOfBullet::set_facing_direction(double value)
    {
        _internal_set_facing_direction(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.facing_direction)
    }

    // int64 guid = 5;
    inline void MessageOfBullet::clear_guid()
    {
        _impl_.guid_ = int64_t{0};
    }
    inline int64_t MessageOfBullet::_internal_guid() const
    {
        return _impl_.guid_;
    }
    inline int64_t MessageOfBullet::guid() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.guid)
        return _internal_guid();
    }
    inline void MessageOfBullet::_internal_set_guid(int64_t value)
    {
        _impl_.guid_ = value;
    }
    inline void MessageOfBullet::set_guid(int64_t value)
    {
        _internal_set_guid(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.guid)
    }

    // .protobuf.PlayerType team = 6;
    inline void MessageOfBullet::clear_team()
    {
        _impl_.team_ = 0;
    }
    inline ::protobuf::PlayerType MessageOfBullet::_internal_team() const
    {
        return static_cast<::protobuf::PlayerType>(_impl_.team_);
    }
    inline ::protobuf::PlayerType MessageOfBullet::team() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.team)
        return _internal_team();
    }
    inline void MessageOfBullet::_internal_set_team(::protobuf::PlayerType value)
    {
        _impl_.team_ = value;
    }
    inline void MessageOfBullet::set_team(::protobuf::PlayerType value)
    {
        _internal_set_team(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.team)
    }

    // .protobuf.PlaceType place = 7;
    inline void MessageOfBullet::clear_place()
    {
        _impl_.place_ = 0;
    }
    inline ::protobuf::PlaceType MessageOfBullet::_internal_place() const
    {
        return static_cast<::protobuf::PlaceType>(_impl_.place_);
    }
    inline ::protobuf::PlaceType MessageOfBullet::place() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.place)
        return _internal_place();
    }
    inline void MessageOfBullet::_internal_set_place(::protobuf::PlaceType value)
    {
        _impl_.place_ = value;
    }
    inline void MessageOfBullet::set_place(::protobuf::PlaceType value)
    {
        _internal_set_place(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.place)
    }

    // double bomb_range = 8;
    inline void MessageOfBullet::clear_bomb_range()
    {
        _impl_.bomb_range_ = 0;
    }
    inline double MessageOfBullet::_internal_bomb_range() const
    {
        return _impl_.bomb_range_;
    }
    inline double MessageOfBullet::bomb_range() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.bomb_range)
        return _internal_bomb_range();
    }
    inline void MessageOfBullet::_internal_set_bomb_range(double value)
    {
        _impl_.bomb_range_ = value;
    }
    inline void MessageOfBullet::set_bomb_range(double value)
    {
        _internal_set_bomb_range(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.bomb_range)
    }

    // int32 speed = 9;
    inline void MessageOfBullet::clear_speed()
    {
        _impl_.speed_ = 0;
    }
    inline int32_t MessageOfBullet::_internal_speed() const
    {
        return _impl_.speed_;
    }
    inline int32_t MessageOfBullet::speed() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.speed)
        return _internal_speed();
    }
    inline void MessageOfBullet::_internal_set_speed(int32_t value)
    {
        _impl_.speed_ = value;
    }
    inline void MessageOfBullet::set_speed(int32_t value)
    {
        _internal_set_speed(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.speed)
    }

    // -------------------------------------------------------------------

    // MessageOfBombedBullet

    // .protobuf.BulletType type = 1;
    inline void MessageOfBombedBullet::clear_type()
    {
        _impl_.type_ = 0;
    }
    inline ::protobuf::BulletType MessageOfBombedBullet::_internal_type() const
    {
        return static_cast<::protobuf::BulletType>(_impl_.type_);
    }
    inline ::protobuf::BulletType MessageOfBombedBullet::type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBombedBullet.type)
        return _internal_type();
    }
    inline void MessageOfBombedBullet::_internal_set_type(::protobuf::BulletType value)
    {
        _impl_.type_ = value;
    }
    inline void MessageOfBombedBullet::set_type(::protobuf::BulletType value)
    {
        _internal_set_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBombedBullet.type)
    }

    // int32 x = 2;
    inline void MessageOfBombedBullet::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfBombedBullet::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfBombedBullet::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBombedBullet.x)
        return _internal_x();
    }
    inline void MessageOfBombedBullet::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfBombedBullet::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBombedBullet.x)
    }

    // int32 y = 3;
    inline void MessageOfBombedBullet::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfBombedBullet::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfBombedBullet::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBombedBullet.y)
        return _internal_y();
    }
    inline void MessageOfBombedBullet::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfBombedBullet::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBombedBullet.y)
    }

    // double facing_direction = 4;
    inline void MessageOfBombedBullet::clear_facing_direction()
    {
        _impl_.facing_direction_ = 0;
    }
    inline double MessageOfBombedBullet::_internal_facing_direction() const
    {
        return _impl_.facing_direction_;
    }
    inline double MessageOfBombedBullet::facing_direction() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBombedBullet.facing_direction)
        return _internal_facing_direction();
    }
    inline void MessageOfBombedBullet::_internal_set_facing_direction(double value)
    {
        _impl_.facing_direction_ = value;
    }
    inline void MessageOfBombedBullet::set_facing_direction(double value)
    {
        _internal_set_facing_direction(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBombedBullet.facing_direction)
    }

    // int64 mapping_id = 5;
    inline void MessageOfBombedBullet::clear_mapping_id()
    {
        _impl_.mapping_id_ = int64_t{0};
    }
    inline int64_t MessageOfBombedBullet::_internal_mapping_id() const
    {
        return _impl_.mapping_id_;
    }
    inline int64_t MessageOfBombedBullet::mapping_id() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBombedBullet.mapping_id)
        return _internal_mapping_id();
    }
    inline void MessageOfBombedBullet::_internal_set_mapping_id(int64_t value)
    {
        _impl_.mapping_id_ = value;
    }
    inline void MessageOfBombedBullet::set_mapping_id(int64_t value)
    {
        _internal_set_mapping_id(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBombedBullet.mapping_id)
    }

    // double bomb_range = 6;
    inline void MessageOfBombedBullet::clear_bomb_range()
    {
        _impl_.bomb_range_ = 0;
    }
    inline double MessageOfBombedBullet::_internal_bomb_range() const
    {
        return _impl_.bomb_range_;
    }
    inline double MessageOfBombedBullet::bomb_range() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBombedBullet.bomb_range)
        return _internal_bomb_range();
    }
    inline void MessageOfBombedBullet::_internal_set_bomb_range(double value)
    {
        _impl_.bomb_range_ = value;
    }
    inline void MessageOfBombedBullet::set_bomb_range(double value)
    {
        _internal_set_bomb_range(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBombedBullet.bomb_range)
    }

    // -------------------------------------------------------------------

    // MessageOfProp

    // .protobuf.PropType type = 1;
    inline void MessageOfProp::clear_type()
    {
        _impl_.type_ = 0;
    }
    inline ::protobuf::PropType MessageOfProp::_internal_type() const
    {
        return static_cast<::protobuf::PropType>(_impl_.type_);
    }
    inline ::protobuf::PropType MessageOfProp::type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfProp.type)
        return _internal_type();
    }
    inline void MessageOfProp::_internal_set_type(::protobuf::PropType value)
    {
        _impl_.type_ = value;
    }
    inline void MessageOfProp::set_type(::protobuf::PropType value)
    {
        _internal_set_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfProp.type)
    }

    // int32 x = 2;
    inline void MessageOfProp::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfProp::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfProp::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfProp.x)
        return _internal_x();
    }
    inline void MessageOfProp::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfProp::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfProp.x)
    }

    // int32 y = 3;
    inline void MessageOfProp::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfProp::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfProp::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfProp.y)
        return _internal_y();
    }
    inline void MessageOfProp::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfProp::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfProp.y)
    }

    // double facing_direction = 4;
    inline void MessageOfProp::clear_facing_direction()
    {
        _impl_.facing_direction_ = 0;
    }
    inline double MessageOfProp::_internal_facing_direction() const
    {
        return _impl_.facing_direction_;
    }
    inline double MessageOfProp::facing_direction() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfProp.facing_direction)
        return _internal_facing_direction();
    }
    inline void MessageOfProp::_internal_set_facing_direction(double value)
    {
        _impl_.facing_direction_ = value;
    }
    inline void MessageOfProp::set_facing_direction(double value)
    {
        _internal_set_facing_direction(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfProp.facing_direction)
    }

    // int64 guid = 5;
    inline void MessageOfProp::clear_guid()
    {
        _impl_.guid_ = int64_t{0};
    }
    inline int64_t MessageOfProp::_internal_guid() const
    {
        return _impl_.guid_;
    }
    inline int64_t MessageOfProp::guid() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfProp.guid)
        return _internal_guid();
    }
    inline void MessageOfProp::_internal_set_guid(int64_t value)
    {
        _impl_.guid_ = value;
    }
    inline void MessageOfProp::set_guid(int64_t value)
    {
        _internal_set_guid(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfProp.guid)
    }

    // .protobuf.PlaceType place = 6;
    inline void MessageOfProp::clear_place()
    {
        _impl_.place_ = 0;
    }
    inline ::protobuf::PlaceType MessageOfProp::_internal_place() const
    {
        return static_cast<::protobuf::PlaceType>(_impl_.place_);
    }
    inline ::protobuf::PlaceType MessageOfProp::place() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfProp.place)
        return _internal_place();
    }
    inline void MessageOfProp::_internal_set_place(::protobuf::PlaceType value)
    {
        _impl_.place_ = value;
    }
    inline void MessageOfProp::set_place(::protobuf::PlaceType value)
    {
        _internal_set_place(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfProp.place)
    }

    // -------------------------------------------------------------------

    // MessageOfPickedProp

    // .protobuf.PropType type = 1;
    inline void MessageOfPickedProp::clear_type()
    {
        _impl_.type_ = 0;
    }
    inline ::protobuf::PropType MessageOfPickedProp::_internal_type() const
    {
        return static_cast<::protobuf::PropType>(_impl_.type_);
    }
    inline ::protobuf::PropType MessageOfPickedProp::type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfPickedProp.type)
        return _internal_type();
    }
    inline void MessageOfPickedProp::_internal_set_type(::protobuf::PropType value)
    {
        _impl_.type_ = value;
    }
    inline void MessageOfPickedProp::set_type(::protobuf::PropType value)
    {
        _internal_set_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfPickedProp.type)
    }

    // int32 x = 2;
    inline void MessageOfPickedProp::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfPickedProp::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfPickedProp::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfPickedProp.x)
        return _internal_x();
    }
    inline void MessageOfPickedProp::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfPickedProp::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfPickedProp.x)
    }

    // int32 y = 3;
    inline void MessageOfPickedProp::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfPickedProp::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfPickedProp::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfPickedProp.y)
        return _internal_y();
    }
    inline void MessageOfPickedProp::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfPickedProp::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfPickedProp.y)
    }

    // double facing_direction = 4;
    inline void MessageOfPickedProp::clear_facing_direction()
    {
        _impl_.facing_direction_ = 0;
    }
    inline double MessageOfPickedProp::_internal_facing_direction() const
    {
        return _impl_.facing_direction_;
    }
    inline double MessageOfPickedProp::facing_direction() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfPickedProp.facing_direction)
        return _internal_facing_direction();
    }
    inline void MessageOfPickedProp::_internal_set_facing_direction(double value)
    {
        _impl_.facing_direction_ = value;
    }
    inline void MessageOfPickedProp::set_facing_direction(double value)
    {
        _internal_set_facing_direction(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfPickedProp.facing_direction)
    }

    // int64 mapping_id = 5;
    inline void MessageOfPickedProp::clear_mapping_id()
    {
        _impl_.mapping_id_ = int64_t{0};
    }
    inline int64_t MessageOfPickedProp::_internal_mapping_id() const
    {
        return _impl_.mapping_id_;
    }
    inline int64_t MessageOfPickedProp::mapping_id() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfPickedProp.mapping_id)
        return _internal_mapping_id();
    }
    inline void MessageOfPickedProp::_internal_set_mapping_id(int64_t value)
    {
        _impl_.mapping_id_ = value;
    }
    inline void MessageOfPickedProp::set_mapping_id(int64_t value)
    {
        _internal_set_mapping_id(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfPickedProp.mapping_id)
    }

    // -------------------------------------------------------------------

    // MessageOfClassroom

    // int32 x = 1;
    inline void MessageOfClassroom::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfClassroom::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfClassroom::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfClassroom.x)
        return _internal_x();
    }
    inline void MessageOfClassroom::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfClassroom::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfClassroom.x)
    }

    // int32 y = 2;
    inline void MessageOfClassroom::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfClassroom::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfClassroom::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfClassroom.y)
        return _internal_y();
    }
    inline void MessageOfClassroom::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfClassroom::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfClassroom.y)
    }

    // int32 progress = 3;
    inline void MessageOfClassroom::clear_progress()
    {
        _impl_.progress_ = 0;
    }
    inline int32_t MessageOfClassroom::_internal_progress() const
    {
        return _impl_.progress_;
    }
    inline int32_t MessageOfClassroom::progress() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfClassroom.progress)
        return _internal_progress();
    }
    inline void MessageOfClassroom::_internal_set_progress(int32_t value)
    {
        _impl_.progress_ = value;
    }
    inline void MessageOfClassroom::set_progress(int32_t value)
    {
        _internal_set_progress(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfClassroom.progress)
    }

    // -------------------------------------------------------------------

    // MessageOfGate

    // int32 x = 1;
    inline void MessageOfGate::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfGate::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfGate::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfGate.x)
        return _internal_x();
    }
    inline void MessageOfGate::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfGate::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfGate.x)
    }

    // int32 y = 2;
    inline void MessageOfGate::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfGate::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfGate::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfGate.y)
        return _internal_y();
    }
    inline void MessageOfGate::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfGate::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfGate.y)
    }

    // int32 progress = 3;
    inline void MessageOfGate::clear_progress()
    {
        _impl_.progress_ = 0;
    }
    inline int32_t MessageOfGate::_internal_progress() const
    {
        return _impl_.progress_;
    }
    inline int32_t MessageOfGate::progress() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfGate.progress)
        return _internal_progress();
    }
    inline void MessageOfGate::_internal_set_progress(int32_t value)
    {
        _impl_.progress_ = value;
    }
    inline void MessageOfGate::set_progress(int32_t value)
    {
        _internal_set_progress(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfGate.progress)
    }

    // -------------------------------------------------------------------

    // MessageOfHiddenGate

    // int32 x = 1;
    inline void MessageOfHiddenGate::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfHiddenGate::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfHiddenGate::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfHiddenGate.x)
        return _internal_x();
    }
    inline void MessageOfHiddenGate::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfHiddenGate::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfHiddenGate.x)
    }

    // int32 y = 2;
    inline void MessageOfHiddenGate::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfHiddenGate::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfHiddenGate::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfHiddenGate.y)
        return _internal_y();
    }
    inline void MessageOfHiddenGate::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfHiddenGate::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfHiddenGate.y)
    }

    // bool opened = 3;
    inline void MessageOfHiddenGate::clear_opened()
    {
        _impl_.opened_ = false;
    }
    inline bool MessageOfHiddenGate::_internal_opened() const
    {
        return _impl_.opened_;
    }
    inline bool MessageOfHiddenGate::opened() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfHiddenGate.opened)
        return _internal_opened();
    }
    inline void MessageOfHiddenGate::_internal_set_opened(bool value)
    {
        _impl_.opened_ = value;
    }
    inline void MessageOfHiddenGate::set_opened(bool value)
    {
        _internal_set_opened(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfHiddenGate.opened)
    }

    // -------------------------------------------------------------------

    // MessageOfDoor

    // int32 x = 1;
    inline void MessageOfDoor::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfDoor::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfDoor::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfDoor.x)
        return _internal_x();
    }
    inline void MessageOfDoor::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfDoor::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfDoor.x)
    }

    // int32 y = 2;
    inline void MessageOfDoor::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfDoor::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfDoor::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfDoor.y)
        return _internal_y();
    }
    inline void MessageOfDoor::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfDoor::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfDoor.y)
    }

    // bool is_open = 3;
    inline void MessageOfDoor::clear_is_open()
    {
        _impl_.is_open_ = false;
    }
    inline bool MessageOfDoor::_internal_is_open() const
    {
        return _impl_.is_open_;
    }
    inline bool MessageOfDoor::is_open() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfDoor.is_open)
        return _internal_is_open();
    }
    inline void MessageOfDoor::_internal_set_is_open(bool value)
    {
        _impl_.is_open_ = value;
    }
    inline void MessageOfDoor::set_is_open(bool value)
    {
        _internal_set_is_open(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfDoor.is_open)
    }

    // int32 progress = 4;
    inline void MessageOfDoor::clear_progress()
    {
        _impl_.progress_ = 0;
    }
    inline int32_t MessageOfDoor::_internal_progress() const
    {
        return _impl_.progress_;
    }
    inline int32_t MessageOfDoor::progress() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfDoor.progress)
        return _internal_progress();
    }
    inline void MessageOfDoor::_internal_set_progress(int32_t value)
    {
        _impl_.progress_ = value;
    }
    inline void MessageOfDoor::set_progress(int32_t value)
    {
        _internal_set_progress(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfDoor.progress)
    }

    // -------------------------------------------------------------------

    // MessageOfChest

    // int32 x = 1;
    inline void MessageOfChest::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfChest::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfChest::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfChest.x)
        return _internal_x();
    }
    inline void MessageOfChest::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfChest::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfChest.x)
    }

    // int32 y = 2;
    inline void MessageOfChest::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfChest::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfChest::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfChest.y)
        return _internal_y();
    }
    inline void MessageOfChest::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfChest::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfChest.y)
    }

    // int32 progress = 3;
    inline void MessageOfChest::clear_progress()
    {
        _impl_.progress_ = 0;
    }
    inline int32_t MessageOfChest::_internal_progress() const
    {
        return _impl_.progress_;
    }
    inline int32_t MessageOfChest::progress() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfChest.progress)
        return _internal_progress();
    }
    inline void MessageOfChest::_internal_set_progress(int32_t value)
    {
        _impl_.progress_ = value;
    }
    inline void MessageOfChest::set_progress(int32_t value)
    {
        _internal_set_progress(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfChest.progress)
    }

    // -------------------------------------------------------------------

    // MessageOfMap_Row

    // repeated .protobuf.PlaceType col = 1;
    inline int MessageOfMap_Row::_internal_col_size() const
    {
        return _impl_.col_.size();
    }
    inline int MessageOfMap_Row::col_size() const
    {
        return _internal_col_size();
    }
    inline void MessageOfMap_Row::clear_col()
    {
        _impl_.col_.Clear();
    }
    inline ::protobuf::PlaceType MessageOfMap_Row::_internal_col(int index) const
    {
        return static_cast<::protobuf::PlaceType>(_impl_.col_.Get(index));
    }
    inline ::protobuf::PlaceType MessageOfMap_Row::col(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfMap.Row.col)
        return _internal_col(index);
    }
    inline void MessageOfMap_Row::set_col(int index, ::protobuf::PlaceType value)
    {
        _impl_.col_.Set(index, value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfMap.Row.col)
    }
    inline void MessageOfMap_Row::_internal_add_col(::protobuf::PlaceType value)
    {
        _impl_.col_.Add(value);
    }
    inline void MessageOfMap_Row::add_col(::protobuf::PlaceType value)
    {
        _internal_add_col(value);
        // @@protoc_insertion_point(field_add:protobuf.MessageOfMap.Row.col)
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
        MessageOfMap_Row::col() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageOfMap.Row.col)
        return _impl_.col_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfMap_Row::_internal_mutable_col()
    {
        return &_impl_.col_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfMap_Row::mutable_col()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfMap.Row.col)
        return _internal_mutable_col();
    }

    // -------------------------------------------------------------------

    // MessageOfMap

    // repeated .protobuf.MessageOfMap.Row row = 2;
    inline int MessageOfMap::_internal_row_size() const
    {
        return _impl_.row_.size();
    }
    inline int MessageOfMap::row_size() const
    {
        return _internal_row_size();
    }
    inline void MessageOfMap::clear_row()
    {
        _impl_.row_.Clear();
    }
    inline ::protobuf::MessageOfMap_Row* MessageOfMap::mutable_row(int index)
    {
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfMap.row)
        return _impl_.row_.Mutable(index);
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfMap_Row>*
        MessageOfMap::mutable_row()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfMap.row)
        return &_impl_.row_;
    }
    inline const ::protobuf::MessageOfMap_Row& MessageOfMap::_internal_row(int index) const
    {
        return _impl_.row_.Get(index);
    }
    inline const ::protobuf::MessageOfMap_Row& MessageOfMap::row(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfMap.row)
        return _internal_row(index);
    }
    inline ::protobuf::MessageOfMap_Row* MessageOfMap::_internal_add_row()
    {
        return _impl_.row_.Add();
    }
    inline ::protobuf::MessageOfMap_Row* MessageOfMap::add_row()
    {
        ::protobuf::MessageOfMap_Row* _add = _internal_add_row();
        // @@protoc_insertion_point(field_add:protobuf.MessageOfMap.row)
        return _add;
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfMap_Row>&
        MessageOfMap::row() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageOfMap.row)
        return _impl_.row_;
    }

    // -------------------------------------------------------------------

    // MessageOfNews

    // string news = 1;
    inline void MessageOfNews::clear_news()
    {
        _impl_.news_.ClearToEmpty();
    }
    inline const std::string& MessageOfNews::news() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfNews.news)
        return _internal_news();
    }
    template<typename ArgT0, typename... ArgT>
    inline PROTOBUF_ALWAYS_INLINE void MessageOfNews::set_news(ArgT0&& arg0, ArgT... args)
    {
        _impl_.news_.Set(static_cast<ArgT0&&>(arg0), args..., GetArenaForAllocation());
        // @@protoc_insertion_point(field_set:protobuf.MessageOfNews.news)
    }
    inline std::string* MessageOfNews::mutable_news()
    {
        std::string* _s = _internal_mutable_news();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfNews.news)
        return _s;
    }
    inline const std::string& MessageOfNews::_internal_news() const
    {
        return _impl_.news_.Get();
    }
    inline void MessageOfNews::_internal_set_news(const std::string& value)
    {
        _impl_.news_.Set(value, GetArenaForAllocation());
    }
    inline std::string* MessageOfNews::_internal_mutable_news()
    {
        return _impl_.news_.Mutable(GetArenaForAllocation());
    }
    inline std::string* MessageOfNews::release_news()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfNews.news)
        return _impl_.news_.Release();
    }
    inline void MessageOfNews::set_allocated_news(std::string* news)
    {
        if (news != nullptr)
        {
        }
        else
        {
        }
        _impl_.news_.SetAllocated(news, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.news_.IsDefault())
        {
            _impl_.news_.Set("", GetArenaForAllocation());
        }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
        // @@protoc_insertion_point(field_set_allocated:protobuf.MessageOfNews.news)
    }

    // int64 from_id = 2;
    inline void MessageOfNews::clear_from_id()
    {
        _impl_.from_id_ = int64_t{0};
    }
    inline int64_t MessageOfNews::_internal_from_id() const
    {
        return _impl_.from_id_;
    }
    inline int64_t MessageOfNews::from_id() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfNews.from_id)
        return _internal_from_id();
    }
    inline void MessageOfNews::_internal_set_from_id(int64_t value)
    {
        _impl_.from_id_ = value;
    }
    inline void MessageOfNews::set_from_id(int64_t value)
    {
        _internal_set_from_id(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfNews.from_id)
    }

    // int64 to_id = 3;
    inline void MessageOfNews::clear_to_id()
    {
        _impl_.to_id_ = int64_t{0};
    }
    inline int64_t MessageOfNews::_internal_to_id() const
    {
        return _impl_.to_id_;
    }
    inline int64_t MessageOfNews::to_id() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfNews.to_id)
        return _internal_to_id();
    }
    inline void MessageOfNews::_internal_set_to_id(int64_t value)
    {
        _impl_.to_id_ = value;
    }
    inline void MessageOfNews::set_to_id(int64_t value)
    {
        _internal_set_to_id(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfNews.to_id)
    }

    // -------------------------------------------------------------------

    // MessageOfObj

    // .protobuf.MessageOfStudent student_message = 1;
    inline bool MessageOfObj::_internal_has_student_message() const
    {
        return message_of_obj_case() == kStudentMessage;
    }
    inline bool MessageOfObj::has_student_message() const
    {
        return _internal_has_student_message();
    }
    inline void MessageOfObj::set_has_student_message()
    {
        _impl_._oneof_case_[0] = kStudentMessage;
    }
    inline void MessageOfObj::clear_student_message()
    {
        if (_internal_has_student_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete _impl_.message_of_obj_.student_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfStudent* MessageOfObj::release_student_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.student_message)
        if (_internal_has_student_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfStudent* temp = _impl_.message_of_obj_.student_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            _impl_.message_of_obj_.student_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfStudent& MessageOfObj::_internal_student_message() const
    {
        return _internal_has_student_message() ? *_impl_.message_of_obj_.student_message_ : reinterpret_cast<::protobuf::MessageOfStudent&>(::protobuf::_MessageOfStudent_default_instance_);
    }
    inline const ::protobuf::MessageOfStudent& MessageOfObj::student_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.student_message)
        return _internal_student_message();
    }
    inline ::protobuf::MessageOfStudent* MessageOfObj::unsafe_arena_release_student_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.student_message)
        if (_internal_has_student_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfStudent* temp = _impl_.message_of_obj_.student_message_;
            _impl_.message_of_obj_.student_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_student_message(::protobuf::MessageOfStudent* student_message)
    {
        clear_message_of_obj();
        if (student_message)
        {
            set_has_student_message();
            _impl_.message_of_obj_.student_message_ = student_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.student_message)
    }
    inline ::protobuf::MessageOfStudent* MessageOfObj::_internal_mutable_student_message()
    {
        if (!_internal_has_student_message())
        {
            clear_message_of_obj();
            set_has_student_message();
            _impl_.message_of_obj_.student_message_ = CreateMaybeMessage<::protobuf::MessageOfStudent>(GetArenaForAllocation());
        }
        return _impl_.message_of_obj_.student_message_;
    }
    inline ::protobuf::MessageOfStudent* MessageOfObj::mutable_student_message()
    {
        ::protobuf::MessageOfStudent* _msg = _internal_mutable_student_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.student_message)
        return _msg;
    }

    // .protobuf.MessageOfTricker tricker_message = 2;
    inline bool MessageOfObj::_internal_has_tricker_message() const
    {
        return message_of_obj_case() == kTrickerMessage;
    }
    inline bool MessageOfObj::has_tricker_message() const
    {
        return _internal_has_tricker_message();
    }
    inline void MessageOfObj::set_has_tricker_message()
    {
        _impl_._oneof_case_[0] = kTrickerMessage;
    }
    inline void MessageOfObj::clear_tricker_message()
    {
        if (_internal_has_tricker_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete _impl_.message_of_obj_.tricker_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfTricker* MessageOfObj::release_tricker_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.tricker_message)
        if (_internal_has_tricker_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfTricker* temp = _impl_.message_of_obj_.tricker_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            _impl_.message_of_obj_.tricker_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfTricker& MessageOfObj::_internal_tricker_message() const
    {
        return _internal_has_tricker_message() ? *_impl_.message_of_obj_.tricker_message_ : reinterpret_cast<::protobuf::MessageOfTricker&>(::protobuf::_MessageOfTricker_default_instance_);
    }
    inline const ::protobuf::MessageOfTricker& MessageOfObj::tricker_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.tricker_message)
        return _internal_tricker_message();
    }
    inline ::protobuf::MessageOfTricker* MessageOfObj::unsafe_arena_release_tricker_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.tricker_message)
        if (_internal_has_tricker_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfTricker* temp = _impl_.message_of_obj_.tricker_message_;
            _impl_.message_of_obj_.tricker_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_tricker_message(::protobuf::MessageOfTricker* tricker_message)
    {
        clear_message_of_obj();
        if (tricker_message)
        {
            set_has_tricker_message();
            _impl_.message_of_obj_.tricker_message_ = tricker_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.tricker_message)
    }
    inline ::protobuf::MessageOfTricker* MessageOfObj::_internal_mutable_tricker_message()
    {
        if (!_internal_has_tricker_message())
        {
            clear_message_of_obj();
            set_has_tricker_message();
            _impl_.message_of_obj_.tricker_message_ = CreateMaybeMessage<::protobuf::MessageOfTricker>(GetArenaForAllocation());
        }
        return _impl_.message_of_obj_.tricker_message_;
    }
    inline ::protobuf::MessageOfTricker* MessageOfObj::mutable_tricker_message()
    {
        ::protobuf::MessageOfTricker* _msg = _internal_mutable_tricker_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.tricker_message)
        return _msg;
    }

    // .protobuf.MessageOfProp prop_message = 3;
    inline bool MessageOfObj::_internal_has_prop_message() const
    {
        return message_of_obj_case() == kPropMessage;
    }
    inline bool MessageOfObj::has_prop_message() const
    {
        return _internal_has_prop_message();
    }
    inline void MessageOfObj::set_has_prop_message()
    {
        _impl_._oneof_case_[0] = kPropMessage;
    }
    inline void MessageOfObj::clear_prop_message()
    {
        if (_internal_has_prop_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete _impl_.message_of_obj_.prop_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfProp* MessageOfObj::release_prop_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.prop_message)
        if (_internal_has_prop_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfProp* temp = _impl_.message_of_obj_.prop_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            _impl_.message_of_obj_.prop_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfProp& MessageOfObj::_internal_prop_message() const
    {
        return _internal_has_prop_message() ? *_impl_.message_of_obj_.prop_message_ : reinterpret_cast<::protobuf::MessageOfProp&>(::protobuf::_MessageOfProp_default_instance_);
    }
    inline const ::protobuf::MessageOfProp& MessageOfObj::prop_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.prop_message)
        return _internal_prop_message();
    }
    inline ::protobuf::MessageOfProp* MessageOfObj::unsafe_arena_release_prop_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.prop_message)
        if (_internal_has_prop_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfProp* temp = _impl_.message_of_obj_.prop_message_;
            _impl_.message_of_obj_.prop_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_prop_message(::protobuf::MessageOfProp* prop_message)
    {
        clear_message_of_obj();
        if (prop_message)
        {
            set_has_prop_message();
            _impl_.message_of_obj_.prop_message_ = prop_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.prop_message)
    }
    inline ::protobuf::MessageOfProp* MessageOfObj::_internal_mutable_prop_message()
    {
        if (!_internal_has_prop_message())
        {
            clear_message_of_obj();
            set_has_prop_message();
            _impl_.message_of_obj_.prop_message_ = CreateMaybeMessage<::protobuf::MessageOfProp>(GetArenaForAllocation());
        }
        return _impl_.message_of_obj_.prop_message_;
    }
    inline ::protobuf::MessageOfProp* MessageOfObj::mutable_prop_message()
    {
        ::protobuf::MessageOfProp* _msg = _internal_mutable_prop_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.prop_message)
        return _msg;
    }

    // .protobuf.MessageOfBullet bullet_message = 4;
    inline bool MessageOfObj::_internal_has_bullet_message() const
    {
        return message_of_obj_case() == kBulletMessage;
    }
    inline bool MessageOfObj::has_bullet_message() const
    {
        return _internal_has_bullet_message();
    }
    inline void MessageOfObj::set_has_bullet_message()
    {
        _impl_._oneof_case_[0] = kBulletMessage;
    }
    inline void MessageOfObj::clear_bullet_message()
    {
        if (_internal_has_bullet_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete _impl_.message_of_obj_.bullet_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfBullet* MessageOfObj::release_bullet_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.bullet_message)
        if (_internal_has_bullet_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfBullet* temp = _impl_.message_of_obj_.bullet_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            _impl_.message_of_obj_.bullet_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfBullet& MessageOfObj::_internal_bullet_message() const
    {
        return _internal_has_bullet_message() ? *_impl_.message_of_obj_.bullet_message_ : reinterpret_cast<::protobuf::MessageOfBullet&>(::protobuf::_MessageOfBullet_default_instance_);
    }
    inline const ::protobuf::MessageOfBullet& MessageOfObj::bullet_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.bullet_message)
        return _internal_bullet_message();
    }
    inline ::protobuf::MessageOfBullet* MessageOfObj::unsafe_arena_release_bullet_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.bullet_message)
        if (_internal_has_bullet_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfBullet* temp = _impl_.message_of_obj_.bullet_message_;
            _impl_.message_of_obj_.bullet_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_bullet_message(::protobuf::MessageOfBullet* bullet_message)
    {
        clear_message_of_obj();
        if (bullet_message)
        {
            set_has_bullet_message();
            _impl_.message_of_obj_.bullet_message_ = bullet_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.bullet_message)
    }
    inline ::protobuf::MessageOfBullet* MessageOfObj::_internal_mutable_bullet_message()
    {
        if (!_internal_has_bullet_message())
        {
            clear_message_of_obj();
            set_has_bullet_message();
            _impl_.message_of_obj_.bullet_message_ = CreateMaybeMessage<::protobuf::MessageOfBullet>(GetArenaForAllocation());
        }
        return _impl_.message_of_obj_.bullet_message_;
    }
    inline ::protobuf::MessageOfBullet* MessageOfObj::mutable_bullet_message()
    {
        ::protobuf::MessageOfBullet* _msg = _internal_mutable_bullet_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.bullet_message)
        return _msg;
    }

    // .protobuf.MessageOfBombedBullet bombed_bullet_message = 5;
    inline bool MessageOfObj::_internal_has_bombed_bullet_message() const
    {
        return message_of_obj_case() == kBombedBulletMessage;
    }
    inline bool MessageOfObj::has_bombed_bullet_message() const
    {
        return _internal_has_bombed_bullet_message();
    }
    inline void MessageOfObj::set_has_bombed_bullet_message()
    {
        _impl_._oneof_case_[0] = kBombedBulletMessage;
    }
    inline void MessageOfObj::clear_bombed_bullet_message()
    {
        if (_internal_has_bombed_bullet_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete _impl_.message_of_obj_.bombed_bullet_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfBombedBullet* MessageOfObj::release_bombed_bullet_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.bombed_bullet_message)
        if (_internal_has_bombed_bullet_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfBombedBullet* temp = _impl_.message_of_obj_.bombed_bullet_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            _impl_.message_of_obj_.bombed_bullet_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfBombedBullet& MessageOfObj::_internal_bombed_bullet_message() const
    {
        return _internal_has_bombed_bullet_message() ? *_impl_.message_of_obj_.bombed_bullet_message_ : reinterpret_cast<::protobuf::MessageOfBombedBullet&>(::protobuf::_MessageOfBombedBullet_default_instance_);
    }
    inline const ::protobuf::MessageOfBombedBullet& MessageOfObj::bombed_bullet_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.bombed_bullet_message)
        return _internal_bombed_bullet_message();
    }
    inline ::protobuf::MessageOfBombedBullet* MessageOfObj::unsafe_arena_release_bombed_bullet_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.bombed_bullet_message)
        if (_internal_has_bombed_bullet_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfBombedBullet* temp = _impl_.message_of_obj_.bombed_bullet_message_;
            _impl_.message_of_obj_.bombed_bullet_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_bombed_bullet_message(::protobuf::MessageOfBombedBullet* bombed_bullet_message)
    {
        clear_message_of_obj();
        if (bombed_bullet_message)
        {
            set_has_bombed_bullet_message();
            _impl_.message_of_obj_.bombed_bullet_message_ = bombed_bullet_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.bombed_bullet_message)
    }
    inline ::protobuf::MessageOfBombedBullet* MessageOfObj::_internal_mutable_bombed_bullet_message()
    {
        if (!_internal_has_bombed_bullet_message())
        {
            clear_message_of_obj();
            set_has_bombed_bullet_message();
            _impl_.message_of_obj_.bombed_bullet_message_ = CreateMaybeMessage<::protobuf::MessageOfBombedBullet>(GetArenaForAllocation());
        }
        return _impl_.message_of_obj_.bombed_bullet_message_;
    }
    inline ::protobuf::MessageOfBombedBullet* MessageOfObj::mutable_bombed_bullet_message()
    {
        ::protobuf::MessageOfBombedBullet* _msg = _internal_mutable_bombed_bullet_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.bombed_bullet_message)
        return _msg;
    }

    // .protobuf.MessageOfClassroom classroom_message = 6;
    inline bool MessageOfObj::_internal_has_classroom_message() const
    {
        return message_of_obj_case() == kClassroomMessage;
    }
    inline bool MessageOfObj::has_classroom_message() const
    {
        return _internal_has_classroom_message();
    }
    inline void MessageOfObj::set_has_classroom_message()
    {
        _impl_._oneof_case_[0] = kClassroomMessage;
    }
    inline void MessageOfObj::clear_classroom_message()
    {
        if (_internal_has_classroom_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete _impl_.message_of_obj_.classroom_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfClassroom* MessageOfObj::release_classroom_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.classroom_message)
        if (_internal_has_classroom_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfClassroom* temp = _impl_.message_of_obj_.classroom_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            _impl_.message_of_obj_.classroom_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfClassroom& MessageOfObj::_internal_classroom_message() const
    {
        return _internal_has_classroom_message() ? *_impl_.message_of_obj_.classroom_message_ : reinterpret_cast<::protobuf::MessageOfClassroom&>(::protobuf::_MessageOfClassroom_default_instance_);
    }
    inline const ::protobuf::MessageOfClassroom& MessageOfObj::classroom_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.classroom_message)
        return _internal_classroom_message();
    }
    inline ::protobuf::MessageOfClassroom* MessageOfObj::unsafe_arena_release_classroom_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.classroom_message)
        if (_internal_has_classroom_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfClassroom* temp = _impl_.message_of_obj_.classroom_message_;
            _impl_.message_of_obj_.classroom_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_classroom_message(::protobuf::MessageOfClassroom* classroom_message)
    {
        clear_message_of_obj();
        if (classroom_message)
        {
            set_has_classroom_message();
            _impl_.message_of_obj_.classroom_message_ = classroom_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.classroom_message)
    }
    inline ::protobuf::MessageOfClassroom* MessageOfObj::_internal_mutable_classroom_message()
    {
        if (!_internal_has_classroom_message())
        {
            clear_message_of_obj();
            set_has_classroom_message();
            _impl_.message_of_obj_.classroom_message_ = CreateMaybeMessage<::protobuf::MessageOfClassroom>(GetArenaForAllocation());
        }
        return _impl_.message_of_obj_.classroom_message_;
    }
    inline ::protobuf::MessageOfClassroom* MessageOfObj::mutable_classroom_message()
    {
        ::protobuf::MessageOfClassroom* _msg = _internal_mutable_classroom_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.classroom_message)
        return _msg;
    }

    // .protobuf.MessageOfDoor door_message = 7;
    inline bool MessageOfObj::_internal_has_door_message() const
    {
        return message_of_obj_case() == kDoorMessage;
    }
    inline bool MessageOfObj::has_door_message() const
    {
        return _internal_has_door_message();
    }
    inline void MessageOfObj::set_has_door_message()
    {
        _impl_._oneof_case_[0] = kDoorMessage;
    }
    inline void MessageOfObj::clear_door_message()
    {
        if (_internal_has_door_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete _impl_.message_of_obj_.door_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfDoor* MessageOfObj::release_door_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.door_message)
        if (_internal_has_door_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfDoor* temp = _impl_.message_of_obj_.door_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            _impl_.message_of_obj_.door_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfDoor& MessageOfObj::_internal_door_message() const
    {
        return _internal_has_door_message() ? *_impl_.message_of_obj_.door_message_ : reinterpret_cast<::protobuf::MessageOfDoor&>(::protobuf::_MessageOfDoor_default_instance_);
    }
    inline const ::protobuf::MessageOfDoor& MessageOfObj::door_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.door_message)
        return _internal_door_message();
    }
    inline ::protobuf::MessageOfDoor* MessageOfObj::unsafe_arena_release_door_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.door_message)
        if (_internal_has_door_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfDoor* temp = _impl_.message_of_obj_.door_message_;
            _impl_.message_of_obj_.door_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_door_message(::protobuf::MessageOfDoor* door_message)
    {
        clear_message_of_obj();
        if (door_message)
        {
            set_has_door_message();
            _impl_.message_of_obj_.door_message_ = door_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.door_message)
    }
    inline ::protobuf::MessageOfDoor* MessageOfObj::_internal_mutable_door_message()
    {
        if (!_internal_has_door_message())
        {
            clear_message_of_obj();
            set_has_door_message();
            _impl_.message_of_obj_.door_message_ = CreateMaybeMessage<::protobuf::MessageOfDoor>(GetArenaForAllocation());
        }
        return _impl_.message_of_obj_.door_message_;
    }
    inline ::protobuf::MessageOfDoor* MessageOfObj::mutable_door_message()
    {
        ::protobuf::MessageOfDoor* _msg = _internal_mutable_door_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.door_message)
        return _msg;
    }

    // .protobuf.MessageOfGate gate_message = 8;
    inline bool MessageOfObj::_internal_has_gate_message() const
    {
        return message_of_obj_case() == kGateMessage;
    }
    inline bool MessageOfObj::has_gate_message() const
    {
        return _internal_has_gate_message();
    }
    inline void MessageOfObj::set_has_gate_message()
    {
        _impl_._oneof_case_[0] = kGateMessage;
    }
    inline void MessageOfObj::clear_gate_message()
    {
        if (_internal_has_gate_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete _impl_.message_of_obj_.gate_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfGate* MessageOfObj::release_gate_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.gate_message)
        if (_internal_has_gate_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfGate* temp = _impl_.message_of_obj_.gate_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            _impl_.message_of_obj_.gate_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfGate& MessageOfObj::_internal_gate_message() const
    {
        return _internal_has_gate_message() ? *_impl_.message_of_obj_.gate_message_ : reinterpret_cast<::protobuf::MessageOfGate&>(::protobuf::_MessageOfGate_default_instance_);
    }
    inline const ::protobuf::MessageOfGate& MessageOfObj::gate_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.gate_message)
        return _internal_gate_message();
    }
    inline ::protobuf::MessageOfGate* MessageOfObj::unsafe_arena_release_gate_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.gate_message)
        if (_internal_has_gate_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfGate* temp = _impl_.message_of_obj_.gate_message_;
            _impl_.message_of_obj_.gate_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_gate_message(::protobuf::MessageOfGate* gate_message)
    {
        clear_message_of_obj();
        if (gate_message)
        {
            set_has_gate_message();
            _impl_.message_of_obj_.gate_message_ = gate_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.gate_message)
    }
    inline ::protobuf::MessageOfGate* MessageOfObj::_internal_mutable_gate_message()
    {
        if (!_internal_has_gate_message())
        {
            clear_message_of_obj();
            set_has_gate_message();
            _impl_.message_of_obj_.gate_message_ = CreateMaybeMessage<::protobuf::MessageOfGate>(GetArenaForAllocation());
        }
        return _impl_.message_of_obj_.gate_message_;
    }
    inline ::protobuf::MessageOfGate* MessageOfObj::mutable_gate_message()
    {
        ::protobuf::MessageOfGate* _msg = _internal_mutable_gate_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.gate_message)
        return _msg;
    }

    // .protobuf.MessageOfChest chest_message = 9;
    inline bool MessageOfObj::_internal_has_chest_message() const
    {
        return message_of_obj_case() == kChestMessage;
    }
    inline bool MessageOfObj::has_chest_message() const
    {
        return _internal_has_chest_message();
    }
    inline void MessageOfObj::set_has_chest_message()
    {
        _impl_._oneof_case_[0] = kChestMessage;
    }
    inline void MessageOfObj::clear_chest_message()
    {
        if (_internal_has_chest_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete _impl_.message_of_obj_.chest_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfChest* MessageOfObj::release_chest_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.chest_message)
        if (_internal_has_chest_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfChest* temp = _impl_.message_of_obj_.chest_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            _impl_.message_of_obj_.chest_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfChest& MessageOfObj::_internal_chest_message() const
    {
        return _internal_has_chest_message() ? *_impl_.message_of_obj_.chest_message_ : reinterpret_cast<::protobuf::MessageOfChest&>(::protobuf::_MessageOfChest_default_instance_);
    }
    inline const ::protobuf::MessageOfChest& MessageOfObj::chest_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.chest_message)
        return _internal_chest_message();
    }
    inline ::protobuf::MessageOfChest* MessageOfObj::unsafe_arena_release_chest_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.chest_message)
        if (_internal_has_chest_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfChest* temp = _impl_.message_of_obj_.chest_message_;
            _impl_.message_of_obj_.chest_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_chest_message(::protobuf::MessageOfChest* chest_message)
    {
        clear_message_of_obj();
        if (chest_message)
        {
            set_has_chest_message();
            _impl_.message_of_obj_.chest_message_ = chest_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.chest_message)
    }
    inline ::protobuf::MessageOfChest* MessageOfObj::_internal_mutable_chest_message()
    {
        if (!_internal_has_chest_message())
        {
            clear_message_of_obj();
            set_has_chest_message();
            _impl_.message_of_obj_.chest_message_ = CreateMaybeMessage<::protobuf::MessageOfChest>(GetArenaForAllocation());
        }
        return _impl_.message_of_obj_.chest_message_;
    }
    inline ::protobuf::MessageOfChest* MessageOfObj::mutable_chest_message()
    {
        ::protobuf::MessageOfChest* _msg = _internal_mutable_chest_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.chest_message)
        return _msg;
    }

    // .protobuf.MessageOfHiddenGate hidden_gate_message = 10;
    inline bool MessageOfObj::_internal_has_hidden_gate_message() const
    {
        return message_of_obj_case() == kHiddenGateMessage;
    }
    inline bool MessageOfObj::has_hidden_gate_message() const
    {
        return _internal_has_hidden_gate_message();
    }
    inline void MessageOfObj::set_has_hidden_gate_message()
    {
        _impl_._oneof_case_[0] = kHiddenGateMessage;
    }
    inline void MessageOfObj::clear_hidden_gate_message()
    {
        if (_internal_has_hidden_gate_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete _impl_.message_of_obj_.hidden_gate_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfHiddenGate* MessageOfObj::release_hidden_gate_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.hidden_gate_message)
        if (_internal_has_hidden_gate_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfHiddenGate* temp = _impl_.message_of_obj_.hidden_gate_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            _impl_.message_of_obj_.hidden_gate_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfHiddenGate& MessageOfObj::_internal_hidden_gate_message() const
    {
        return _internal_has_hidden_gate_message() ? *_impl_.message_of_obj_.hidden_gate_message_ : reinterpret_cast<::protobuf::MessageOfHiddenGate&>(::protobuf::_MessageOfHiddenGate_default_instance_);
    }
    inline const ::protobuf::MessageOfHiddenGate& MessageOfObj::hidden_gate_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.hidden_gate_message)
        return _internal_hidden_gate_message();
    }
    inline ::protobuf::MessageOfHiddenGate* MessageOfObj::unsafe_arena_release_hidden_gate_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.hidden_gate_message)
        if (_internal_has_hidden_gate_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfHiddenGate* temp = _impl_.message_of_obj_.hidden_gate_message_;
            _impl_.message_of_obj_.hidden_gate_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_hidden_gate_message(::protobuf::MessageOfHiddenGate* hidden_gate_message)
    {
        clear_message_of_obj();
        if (hidden_gate_message)
        {
            set_has_hidden_gate_message();
            _impl_.message_of_obj_.hidden_gate_message_ = hidden_gate_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.hidden_gate_message)
    }
    inline ::protobuf::MessageOfHiddenGate* MessageOfObj::_internal_mutable_hidden_gate_message()
    {
        if (!_internal_has_hidden_gate_message())
        {
            clear_message_of_obj();
            set_has_hidden_gate_message();
            _impl_.message_of_obj_.hidden_gate_message_ = CreateMaybeMessage<::protobuf::MessageOfHiddenGate>(GetArenaForAllocation());
        }
        return _impl_.message_of_obj_.hidden_gate_message_;
    }
    inline ::protobuf::MessageOfHiddenGate* MessageOfObj::mutable_hidden_gate_message()
    {
        ::protobuf::MessageOfHiddenGate* _msg = _internal_mutable_hidden_gate_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.hidden_gate_message)
        return _msg;
    }

    // .protobuf.MessageOfNews news_message = 11;
    inline bool MessageOfObj::_internal_has_news_message() const
    {
        return message_of_obj_case() == kNewsMessage;
    }
    inline bool MessageOfObj::has_news_message() const
    {
        return _internal_has_news_message();
    }
    inline void MessageOfObj::set_has_news_message()
    {
        _impl_._oneof_case_[0] = kNewsMessage;
    }
    inline void MessageOfObj::clear_news_message()
    {
        if (_internal_has_news_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete _impl_.message_of_obj_.news_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfNews* MessageOfObj::release_news_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.news_message)
        if (_internal_has_news_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfNews* temp = _impl_.message_of_obj_.news_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            _impl_.message_of_obj_.news_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfNews& MessageOfObj::_internal_news_message() const
    {
        return _internal_has_news_message() ? *_impl_.message_of_obj_.news_message_ : reinterpret_cast<::protobuf::MessageOfNews&>(::protobuf::_MessageOfNews_default_instance_);
    }
    inline const ::protobuf::MessageOfNews& MessageOfObj::news_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.news_message)
        return _internal_news_message();
    }
    inline ::protobuf::MessageOfNews* MessageOfObj::unsafe_arena_release_news_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.news_message)
        if (_internal_has_news_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfNews* temp = _impl_.message_of_obj_.news_message_;
            _impl_.message_of_obj_.news_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_news_message(::protobuf::MessageOfNews* news_message)
    {
        clear_message_of_obj();
        if (news_message)
        {
            set_has_news_message();
            _impl_.message_of_obj_.news_message_ = news_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.news_message)
    }
    inline ::protobuf::MessageOfNews* MessageOfObj::_internal_mutable_news_message()
    {
        if (!_internal_has_news_message())
        {
            clear_message_of_obj();
            set_has_news_message();
            _impl_.message_of_obj_.news_message_ = CreateMaybeMessage<::protobuf::MessageOfNews>(GetArenaForAllocation());
        }
        return _impl_.message_of_obj_.news_message_;
    }
    inline ::protobuf::MessageOfNews* MessageOfObj::mutable_news_message()
    {
        ::protobuf::MessageOfNews* _msg = _internal_mutable_news_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.news_message)
        return _msg;
    }

    // .protobuf.MessageOfMap map_message = 12;
    inline bool MessageOfObj::_internal_has_map_message() const
    {
        return message_of_obj_case() == kMapMessage;
    }
    inline bool MessageOfObj::has_map_message() const
    {
        return _internal_has_map_message();
    }
    inline void MessageOfObj::set_has_map_message()
    {
        _impl_._oneof_case_[0] = kMapMessage;
    }
    inline void MessageOfObj::clear_map_message()
    {
        if (_internal_has_map_message())
        {
            if (GetArenaForAllocation() == nullptr)
            {
                delete _impl_.message_of_obj_.map_message_;
            }
            clear_has_message_of_obj();
        }
    }
    inline ::protobuf::MessageOfMap* MessageOfObj::release_map_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageOfObj.map_message)
        if (_internal_has_map_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfMap* temp = _impl_.message_of_obj_.map_message_;
            if (GetArenaForAllocation() != nullptr)
            {
                temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
            }
            _impl_.message_of_obj_.map_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline const ::protobuf::MessageOfMap& MessageOfObj::_internal_map_message() const
    {
        return _internal_has_map_message() ? *_impl_.message_of_obj_.map_message_ : reinterpret_cast<::protobuf::MessageOfMap&>(::protobuf::_MessageOfMap_default_instance_);
    }
    inline const ::protobuf::MessageOfMap& MessageOfObj::map_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfObj.map_message)
        return _internal_map_message();
    }
    inline ::protobuf::MessageOfMap* MessageOfObj::unsafe_arena_release_map_message()
    {
        // @@protoc_insertion_point(field_unsafe_arena_release:protobuf.MessageOfObj.map_message)
        if (_internal_has_map_message())
        {
            clear_has_message_of_obj();
            ::protobuf::MessageOfMap* temp = _impl_.message_of_obj_.map_message_;
            _impl_.message_of_obj_.map_message_ = nullptr;
            return temp;
        }
        else
        {
            return nullptr;
        }
    }
    inline void MessageOfObj::unsafe_arena_set_allocated_map_message(::protobuf::MessageOfMap* map_message)
    {
        clear_message_of_obj();
        if (map_message)
        {
            set_has_map_message();
            _impl_.message_of_obj_.map_message_ = map_message;
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageOfObj.map_message)
    }
    inline ::protobuf::MessageOfMap* MessageOfObj::_internal_mutable_map_message()
    {
        if (!_internal_has_map_message())
        {
            clear_message_of_obj();
            set_has_map_message();
            _impl_.message_of_obj_.map_message_ = CreateMaybeMessage<::protobuf::MessageOfMap>(GetArenaForAllocation());
        }
        return _impl_.message_of_obj_.map_message_;
    }
    inline ::protobuf::MessageOfMap* MessageOfObj::mutable_map_message()
    {
        ::protobuf::MessageOfMap* _msg = _internal_mutable_map_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfObj.map_message)
        return _msg;
    }

    inline bool MessageOfObj::has_message_of_obj() const
    {
        return message_of_obj_case() != MESSAGE_OF_OBJ_NOT_SET;
    }
    inline void MessageOfObj::clear_has_message_of_obj()
    {
        _impl_._oneof_case_[0] = MESSAGE_OF_OBJ_NOT_SET;
    }
    inline MessageOfObj::MessageOfObjCase MessageOfObj::message_of_obj_case() const
    {
        return MessageOfObj::MessageOfObjCase(_impl_._oneof_case_[0]);
    }
    // -------------------------------------------------------------------

    // MessageOfAll

    // int32 game_time = 1;
    inline void MessageOfAll::clear_game_time()
    {
        _impl_.game_time_ = 0;
    }
    inline int32_t MessageOfAll::_internal_game_time() const
    {
        return _impl_.game_time_;
    }
    inline int32_t MessageOfAll::game_time() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfAll.game_time)
        return _internal_game_time();
    }
    inline void MessageOfAll::_internal_set_game_time(int32_t value)
    {
        _impl_.game_time_ = value;
    }
    inline void MessageOfAll::set_game_time(int32_t value)
    {
        _internal_set_game_time(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfAll.game_time)
    }

    // int32 subject_finished = 2;
    inline void MessageOfAll::clear_subject_finished()
    {
        _impl_.subject_finished_ = 0;
    }
    inline int32_t MessageOfAll::_internal_subject_finished() const
    {
        return _impl_.subject_finished_;
    }
    inline int32_t MessageOfAll::subject_finished() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfAll.subject_finished)
        return _internal_subject_finished();
    }
    inline void MessageOfAll::_internal_set_subject_finished(int32_t value)
    {
        _impl_.subject_finished_ = value;
    }
    inline void MessageOfAll::set_subject_finished(int32_t value)
    {
        _internal_set_subject_finished(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfAll.subject_finished)
    }

    // int32 student_graduated = 3;
    inline void MessageOfAll::clear_student_graduated()
    {
        _impl_.student_graduated_ = 0;
    }
    inline int32_t MessageOfAll::_internal_student_graduated() const
    {
        return _impl_.student_graduated_;
    }
    inline int32_t MessageOfAll::student_graduated() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfAll.student_graduated)
        return _internal_student_graduated();
    }
    inline void MessageOfAll::_internal_set_student_graduated(int32_t value)
    {
        _impl_.student_graduated_ = value;
    }
    inline void MessageOfAll::set_student_graduated(int32_t value)
    {
        _internal_set_student_graduated(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfAll.student_graduated)
    }

    // int32 student_quited = 4;
    inline void MessageOfAll::clear_student_quited()
    {
        _impl_.student_quited_ = 0;
    }
    inline int32_t MessageOfAll::_internal_student_quited() const
    {
        return _impl_.student_quited_;
    }
    inline int32_t MessageOfAll::student_quited() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfAll.student_quited)
        return _internal_student_quited();
    }
    inline void MessageOfAll::_internal_set_student_quited(int32_t value)
    {
        _impl_.student_quited_ = value;
    }
    inline void MessageOfAll::set_student_quited(int32_t value)
    {
        _internal_set_student_quited(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfAll.student_quited)
    }

    // int32 student_score = 5;
    inline void MessageOfAll::clear_student_score()
    {
        _impl_.student_score_ = 0;
    }
    inline int32_t MessageOfAll::_internal_student_score() const
    {
        return _impl_.student_score_;
    }
    inline int32_t MessageOfAll::student_score() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfAll.student_score)
        return _internal_student_score();
    }
    inline void MessageOfAll::_internal_set_student_score(int32_t value)
    {
        _impl_.student_score_ = value;
    }
    inline void MessageOfAll::set_student_score(int32_t value)
    {
        _internal_set_student_score(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfAll.student_score)
    }

    // int32 tricker_score = 6;
    inline void MessageOfAll::clear_tricker_score()
    {
        _impl_.tricker_score_ = 0;
    }
    inline int32_t MessageOfAll::_internal_tricker_score() const
    {
        return _impl_.tricker_score_;
    }
    inline int32_t MessageOfAll::tricker_score() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfAll.tricker_score)
        return _internal_tricker_score();
    }
    inline void MessageOfAll::_internal_set_tricker_score(int32_t value)
    {
        _impl_.tricker_score_ = value;
    }
    inline void MessageOfAll::set_tricker_score(int32_t value)
    {
        _internal_set_tricker_score(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfAll.tricker_score)
    }

    // -------------------------------------------------------------------

    // MessageToClient

    // repeated .protobuf.MessageOfObj obj_message = 1;
    inline int MessageToClient::_internal_obj_message_size() const
    {
        return _impl_.obj_message_.size();
    }
    inline int MessageToClient::obj_message_size() const
    {
        return _internal_obj_message_size();
    }
    inline void MessageToClient::clear_obj_message()
    {
        _impl_.obj_message_.Clear();
    }
    inline ::protobuf::MessageOfObj* MessageToClient::mutable_obj_message(int index)
    {
        // @@protoc_insertion_point(field_mutable:protobuf.MessageToClient.obj_message)
        return _impl_.obj_message_.Mutable(index);
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfObj>*
        MessageToClient::mutable_obj_message()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageToClient.obj_message)
        return &_impl_.obj_message_;
    }
    inline const ::protobuf::MessageOfObj& MessageToClient::_internal_obj_message(int index) const
    {
        return _impl_.obj_message_.Get(index);
    }
    inline const ::protobuf::MessageOfObj& MessageToClient::obj_message(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageToClient.obj_message)
        return _internal_obj_message(index);
    }
    inline ::protobuf::MessageOfObj* MessageToClient::_internal_add_obj_message()
    {
        return _impl_.obj_message_.Add();
    }
    inline ::protobuf::MessageOfObj* MessageToClient::add_obj_message()
    {
        ::protobuf::MessageOfObj* _add = _internal_add_obj_message();
        // @@protoc_insertion_point(field_add:protobuf.MessageToClient.obj_message)
        return _add;
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfObj>&
        MessageToClient::obj_message() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageToClient.obj_message)
        return _impl_.obj_message_;
    }

    // .protobuf.GameState game_state = 2;
    inline void MessageToClient::clear_game_state()
    {
        _impl_.game_state_ = 0;
    }
    inline ::protobuf::GameState MessageToClient::_internal_game_state() const
    {
        return static_cast<::protobuf::GameState>(_impl_.game_state_);
    }
    inline ::protobuf::GameState MessageToClient::game_state() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageToClient.game_state)
        return _internal_game_state();
    }
    inline void MessageToClient::_internal_set_game_state(::protobuf::GameState value)
    {
        _impl_.game_state_ = value;
    }
    inline void MessageToClient::set_game_state(::protobuf::GameState value)
    {
        _internal_set_game_state(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageToClient.game_state)
    }

    // .protobuf.MessageOfAll all_message = 3;
    inline bool MessageToClient::_internal_has_all_message() const
    {
        return this != internal_default_instance() && _impl_.all_message_ != nullptr;
    }
    inline bool MessageToClient::has_all_message() const
    {
        return _internal_has_all_message();
    }
    inline void MessageToClient::clear_all_message()
    {
        if (GetArenaForAllocation() == nullptr && _impl_.all_message_ != nullptr)
        {
            delete _impl_.all_message_;
        }
        _impl_.all_message_ = nullptr;
    }
    inline const ::protobuf::MessageOfAll& MessageToClient::_internal_all_message() const
    {
        const ::protobuf::MessageOfAll* p = _impl_.all_message_;
        return p != nullptr ? *p : reinterpret_cast<const ::protobuf::MessageOfAll&>(::protobuf::_MessageOfAll_default_instance_);
    }
    inline const ::protobuf::MessageOfAll& MessageToClient::all_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageToClient.all_message)
        return _internal_all_message();
    }
    inline void MessageToClient::unsafe_arena_set_allocated_all_message(
        ::protobuf::MessageOfAll* all_message
    )
    {
        if (GetArenaForAllocation() == nullptr)
        {
            delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.all_message_);
        }
        _impl_.all_message_ = all_message;
        if (all_message)
        {
        }
        else
        {
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageToClient.all_message)
    }
    inline ::protobuf::MessageOfAll* MessageToClient::release_all_message()
    {
        ::protobuf::MessageOfAll* temp = _impl_.all_message_;
        _impl_.all_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
        auto* old = reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
        temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
        if (GetArenaForAllocation() == nullptr)
        {
            delete old;
        }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
        if (GetArenaForAllocation() != nullptr)
        {
            temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
        }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
        return temp;
    }
    inline ::protobuf::MessageOfAll* MessageToClient::unsafe_arena_release_all_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageToClient.all_message)

        ::protobuf::MessageOfAll* temp = _impl_.all_message_;
        _impl_.all_message_ = nullptr;
        return temp;
    }
    inline ::protobuf::MessageOfAll* MessageToClient::_internal_mutable_all_message()
    {
        if (_impl_.all_message_ == nullptr)
        {
            auto* p = CreateMaybeMessage<::protobuf::MessageOfAll>(GetArenaForAllocation());
            _impl_.all_message_ = p;
        }
        return _impl_.all_message_;
    }
    inline ::protobuf::MessageOfAll* MessageToClient::mutable_all_message()
    {
        ::protobuf::MessageOfAll* _msg = _internal_mutable_all_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageToClient.all_message)
        return _msg;
    }
    inline void MessageToClient::set_allocated_all_message(::protobuf::MessageOfAll* all_message)
    {
        ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
        if (message_arena == nullptr)
        {
            delete _impl_.all_message_;
        }
        if (all_message)
        {
            ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
                ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(all_message);
            if (message_arena != submessage_arena)
            {
                all_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
                    message_arena, all_message, submessage_arena
                );
            }
        }
        else
        {
        }
        _impl_.all_message_ = all_message;
        // @@protoc_insertion_point(field_set_allocated:protobuf.MessageToClient.all_message)
    }

    // -------------------------------------------------------------------

    // MoveRes

    // int64 actual_speed = 1;
    inline void MoveRes::clear_actual_speed()
    {
        _impl_.actual_speed_ = int64_t{0};
    }
    inline int64_t MoveRes::_internal_actual_speed() const
    {
        return _impl_.actual_speed_;
    }
    inline int64_t MoveRes::actual_speed() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MoveRes.actual_speed)
        return _internal_actual_speed();
    }
    inline void MoveRes::_internal_set_actual_speed(int64_t value)
    {
        _impl_.actual_speed_ = value;
    }
    inline void MoveRes::set_actual_speed(int64_t value)
    {
        _internal_set_actual_speed(value);
        // @@protoc_insertion_point(field_set:protobuf.MoveRes.actual_speed)
    }

    // double actual_angle = 2;
    inline void MoveRes::clear_actual_angle()
    {
        _impl_.actual_angle_ = 0;
    }
    inline double MoveRes::_internal_actual_angle() const
    {
        return _impl_.actual_angle_;
    }
    inline double MoveRes::actual_angle() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MoveRes.actual_angle)
        return _internal_actual_angle();
    }
    inline void MoveRes::_internal_set_actual_angle(double value)
    {
        _impl_.actual_angle_ = value;
    }
    inline void MoveRes::set_actual_angle(double value)
    {
        _internal_set_actual_angle(value);
        // @@protoc_insertion_point(field_set:protobuf.MoveRes.actual_angle)
    }

    // bool act_success = 3;
    inline void MoveRes::clear_act_success()
    {
        _impl_.act_success_ = false;
    }
    inline bool MoveRes::_internal_act_success() const
    {
        return _impl_.act_success_;
    }
    inline bool MoveRes::act_success() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MoveRes.act_success)
        return _internal_act_success();
    }
    inline void MoveRes::_internal_set_act_success(bool value)
    {
        _impl_.act_success_ = value;
    }
    inline void MoveRes::set_act_success(bool value)
    {
        _internal_set_act_success(value);
        // @@protoc_insertion_point(field_set:protobuf.MoveRes.act_success)
    }

    // -------------------------------------------------------------------

    // BoolRes

    // bool act_success = 1;
    inline void BoolRes::clear_act_success()
    {
        _impl_.act_success_ = false;
    }
    inline bool BoolRes::_internal_act_success() const
    {
        return _impl_.act_success_;
    }
    inline bool BoolRes::act_success() const
    {
        // @@protoc_insertion_point(field_get:protobuf.BoolRes.act_success)
        return _internal_act_success();
    }
    inline void BoolRes::_internal_set_act_success(bool value)
    {
        _impl_.act_success_ = value;
    }
    inline void BoolRes::set_act_success(bool value)
    {
        _internal_set_act_success(value);
        // @@protoc_insertion_point(field_set:protobuf.BoolRes.act_success)
    }

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__
    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Message2Clients_2eproto
